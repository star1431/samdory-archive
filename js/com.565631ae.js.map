{"version":3,"file":"js/com.565631ae.js","mappings":"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","sources":["webpack://samdory-archive/./src/api/projectApi.js","webpack://samdory-archive/./src/components/ProjectChart.vue","webpack://samdory-archive/./src/components/ProjectChart.vue?f519","webpack://samdory-archive/./src/views/com/Home.vue","webpack://samdory-archive/./src/views/com/Home.vue?082b","webpack://samdory-archive/./src/components/UiField.vue","webpack://samdory-archive/./src/components/UiField.vue?5b9b","webpack://samdory-archive/./src/views/com/Login.vue","webpack://samdory-archive/./src/views/com/Login.vue?0308"],"sourcesContent":["// import axios from 'axios'\r\nimport projects from '@/mockup/projectData.json'\r\n\r\n// 프로젝트 데이터를 가져오는 함수\r\nexport const fetchProjects = async () => {\r\n    try {\r\n        // const response = await axios.get('@/mockup/projectData.json')\r\n        // return response.data\r\n        return projects\r\n    } catch (error) {\r\n        console.error('[api.js || fetchProjects 에러] :', error)\r\n        throw error\r\n    }\r\n}","<template>\r\n    <!-- https://apexcharts.com/vue-chart-demos/line-charts/ -->\r\n    <div class=\"chart-area bar\" v-if=\"props.showYear\">\r\n        <div class=\"chart-header\">\r\n            <div class=\"text-box\">\r\n                <p class=\"title\">연도별 프로젝트 현황</p>\r\n                <p class=\"sub-text\">최근 5년 기준</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"chart-body\">\r\n            <apexchart \r\n                ref=\"refYear\"\r\n                type=\"bar\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                :key=\"seriesYear.length\" \r\n                :options=\"chartYear\" \r\n                :series=\"seriesYear\">\r\n            </apexchart>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"chart-area donut\"  v-if=\"props.showEnter\" id=\"씨발년아\">\r\n        <div class=\"chart-header\">\r\n            <div class=\"text-box\">\r\n                <p class=\"title\">프로젝트 기업 유형</p>\r\n                <p class=\"sub-text\">고객사 업종</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"chart-body\">\r\n            <apexchart \r\n                ref=\"refEnter\"\r\n                type=\"donut\" \r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                :key=\"seriesEnter.length\" \r\n                :options=\"chartEnter\" \r\n                :series=\"seriesEnter\">\r\n            </apexchart>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"chart-area donut\" v-if=\"props.showStack\">\r\n        <div class=\"chart-header\">\r\n            <div class=\"text-box\">\r\n                <p class=\"title\">프로젝트 개발 환경</p>\r\n                <p class=\"sub-text\">활용한 프레임워크</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"chart-body donut\">\r\n            <apexchart \r\n                ref=\"refStack\"\r\n                type=\"donut\" \r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                :key=\"seriesStack.length\" \r\n                :options=\"chartStack\" \r\n                :series=\"seriesStack\">\r\n            </apexchart>\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps, watch, computed, onMounted, onBeforeUnmount } from 'vue'\r\nimport { fetchProjects  } from '@/api/projectApi.js'\r\n\r\nconst props = defineProps({\r\n    showYear: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    showEnter: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    showStack: {\r\n        type: Boolean,\r\n        default: false\r\n    }\r\n})\r\n\r\nconst refEnter = ref(null)\r\nconst refStack = ref(null)\r\nconst refYear = ref(null)\r\n\r\n// 테마 감지 \r\nconst getTheme = () => {\r\n    return localStorage.getItem('theme') === 'dark' ? 'dark' : 'light'\r\n}\r\nconst theme = ref(getTheme())\r\n// 연도차트 api\r\nconst seriesYear = ref([])\r\nconst chartYear = ref({\r\n    chart: { type: 'bar',toolbar: {show: false} },\r\n    plotOptions: {\r\n        bar: { \r\n            barHeight: '60%',\r\n            borderRadius: 6, \r\n            horizontal: true, \r\n            borderRadiusApplication: 'end', \r\n            distributed: true,\r\n            // isDumbbell: false,\r\n        },\r\n    },\r\n    xaxis: { categories: [] },\r\n    // colors: ['#238ed3', '#0b70fb', '#f64e60', '#059510', '#ffa800', '#7e6afd', '#03a917'],\r\n        theme: {\r\n        mode: 'light', \r\n        palette: 'palette2', \r\n        monochrome: {\r\n            enabled: false,\r\n            color: '#255aee',\r\n            shadeTo: 'light',\r\n            shadeIntensity: 1\r\n        },\r\n    },\r\n    dataLabels: { enabled: true },\r\n    stroke: { show: true, width: 2, colors: ['transparent'] },\r\n    legend: { show: true, position: 'top' },\r\n    fill: { opacity: 1 },\r\n    tooltip: { y: {formatter: (val) => {return `${val}`}} },\r\n})\r\n\r\n// 기업유형 차트 api\r\nconst seriesEnter = ref([])\r\nconst chartEnter = ref({\r\n    chart: { type: 'donut' },\r\n    plotOptions: {\r\n        pie:  { customScale: 1.08, donut: {size: '50%'} }\r\n    },\r\n    stroke: { show: true, width: 3, colors: theme.value === 'light' ? ['#fff'] : ['#14181e'] },\r\n    labels: [],\r\n    // colors: ['#238ed3', '#0b70fb', '#f64e60', '#059510', '#ffa800', '#7e6afd', '#03a917'],\r\n        theme: {\r\n        mode: 'light', \r\n        palette: 'palette2', \r\n        monochrome: {\r\n            enabled: false,\r\n            color: '#255aee',\r\n            shadeTo: 'light',\r\n            shadeIntensity: 1\r\n        },\r\n    },\r\n    legend: { show: true, position: 'right' },\r\n    dataLabels: { enabled: true },\r\n    tooltip: { y: {formatter: (val) => {return `${val}`}} },\r\n})\r\n\r\n// 개발환경 차트 api\r\nconst seriesStack = ref([])\r\nconst chartStack = ref({\r\n    chart: { type: 'donut' },\r\n    plotOptions: {\r\n        pie:  { customScale: 1.08, donut: {size: '50%'} }\r\n    },\r\n    stroke: { show: true, width: 3, colors: theme.value === 'light' ? ['#fff'] : ['#14181e'] },\r\n    labels: [],\r\n    // colors: ['#238ed3', '#0b70fb', '#f64e60', '#059510', '#ffa800', '#7e6afd', '#03a917'],\r\n        theme: {\r\n        mode: 'light', \r\n        palette: 'palette2', \r\n        monochrome: {\r\n            enabled: false,\r\n            color: '#255aee',\r\n            shadeTo: 'light',\r\n            shadeIntensity: 1\r\n        },\r\n    },\r\n    legend: { show: true, position: 'right' },\r\n    dataLabels: { enabled: true },\r\n    tooltip: { y: {formatter: (val) => {return `${val}`}} },\r\n})\r\n\r\n\r\n// 년도별 데이터 설정\r\nconst setYearData = (projects) => {\r\n    const currentYear = 2024 // 기준날짜 (추후 유지할때 현재날짜 받아서 넣어야함)\r\n    const yearArr = Array.from({ length: 5 }, (_, i) => currentYear - i)  // 최근 6년 까지\r\n    const data = yearArr.map(year => {\r\n        //지정한 년도들의 각각 총갯수 반환\r\n        return projects.filter(project => project.year == year).length\r\n    })\r\n    seriesYear.value = [{ name: '프로젝트 횟수', data: data }]\r\n    chartYear.value.xaxis.categories = yearArr\r\n}\r\n\r\n// 기업유형 데이터 설정\r\nconst setEnterData = (projects) => {\r\n    // json 배열 순회 enter 값 누적계산\r\n    const enterData = projects.reduce((acc, project) => {\r\n        project.enter.forEach(enter => {\r\n            // 'acc' 객체에 'enter' 키가 없으면 초기화\r\n            if (!acc[enter]) {\r\n                acc[enter] = 0\r\n            }\r\n            acc[enter] += 1\r\n        })\r\n        return acc \r\n        // 누적 객체 반환\r\n    }, {})\r\n    // 오브젝트 키 벨류 나눔\r\n    const enterLabels = Object.keys(enterData)\r\n    const enterSeries = Object.values(enterData)\r\n    // console.log(enterData)\r\n    seriesEnter.value = enterSeries\r\n    chartEnter.value.labels = enterLabels\r\n}\r\n\r\n// 개발환경 데이터 설정\r\nconst setStackData = (projects) => {\r\n    // json 배열 순회 stack 값 누적계산\r\n    const stackData = projects.reduce((acc, project) => {\r\n        project.stack.forEach(stack => {\r\n            // 'acc' 객체에 'stack' 키가 없으면 초기화\r\n            if (!acc[stack]) {\r\n                acc[stack] = 0\r\n            }\r\n            acc[stack] += 1\r\n        })\r\n        return acc\r\n        // 누적 객체 반환\r\n    }, {})\r\n    // 오브젝트 키 벨류 나눔\r\n    const stackLabels = Object.keys(stackData)\r\n    const stackSeries = Object.values(stackData)\r\n    seriesStack.value = stackSeries\r\n    chartStack.value.labels = stackLabels\r\n}\r\n\r\n// 감지추가\r\nconst observer = new MutationObserver(() => {\r\n    theme.value = getTheme()\r\n})\r\n\r\n\r\nonMounted(async () => {\r\n    const projects = await fetchProjects()\r\n    setYearData(projects)\r\n    setStackData(projects)\r\n    setEnterData(projects)\r\n\r\n    // theme 감지 (로컬스토리지 감지가 안되서 대응)\r\n    const appEl = document.querySelector('#app')\r\n    observer.observe(appEl, { attributes: true, attributeFilter: ['class'] })\r\n})\r\n\r\n// 컴포넌트 없어지면 감지 끔\r\nonBeforeUnmount(() => {\r\n    observer.disconnect()\r\n})\r\n\r\nwatch(theme, (newTheme) => {\r\n    // theme 감지 (로컬스토리지 감지가 안되서 대응)\r\n    const enterVal = chartEnter.value\r\n    const stackVal = chartStack.value\r\n    enterVal.stroke.colors = newTheme === 'dark' ? ['#14181e'] : ['#fff']\r\n    stackVal.stroke.colors = newTheme === 'dark' ? ['#14181e'] : ['#fff']\r\n    if (refEnter.value) {\r\n        refEnter.value.updateOptions({ stroke: enterVal.stroke })\r\n    }\r\n    if (refStack.value) {\r\n        refStack.value.updateOptions({ stroke: enterVal.stroke })\r\n    }\r\n})\r\n\r\ncomputed(() => {\r\n\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./ProjectChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectChart.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 type-bg\">\r\n                    <div class=\"home-card-info\">\r\n                        <div class=\"text-box\">\r\n                            <p class=\"title\">SD Archive 에 오신 것을 <span>환영합니다 !</span></p>\r\n                            <p class=\"text\">메뉴를 통해서 최신 정보와 자료 등 확인해주세요.</p>\r\n                        </div>\r\n                        <div class=\"slot-right\">\r\n                            <LottieLoader :lottieData=\"lottieJson\" :startFrame=\"0\" :endFrame=\"110\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"inner-col col-1-3 type-bg\">\r\n                    <div class=\"home-card-small samdory\">\r\n                        <a href=\"http://samdory.synology.me/samdory/#/\" target=\"_blank\" class=\"text-box type-link\" v-if=\"!gitHubURL\">\r\n                            <p class=\"title\">홈페이지 리뉴얼</p>\r\n                            <p class=\"text underline\">베타버전 미리보기</p>\r\n                        </a>\r\n                        <a href=\"https://star1431.github.io/samdory/#/\" target=\"_blank\" class=\"text-box type-link\" v-else>\r\n                            <p class=\"title\">홈페이지 리뉴얼</p>\r\n                            <p class=\"text underline\">베타버전 미리보기</p>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"inner-col col-1-3 type-bg\">\r\n                    <div class=\"home-card-small ftp\">\r\n                        <a href=\"http://samdory.synology.me:5000/\" target=\"_blank\" class=\"text-box type-link\" v-if=\"!gitHubURL\">\r\n                            <p class=\"title\">FTP 서버</p>\r\n                            <p class=\"text\"><span class=\"acc\">0.18TB</span> / 2.68TB</p>\r\n                        </a>\r\n                        <a href=\"javascript:void(0)\" class=\"text-box type-link\" @click=\"alertShow(true)\" v-else>\r\n                            <p class=\"title\">FTP 서버</p>\r\n                            <p class=\"text\"><span class=\"acc\">0.18TB</span> / 2.68TB</p>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"inner-col col-1-3 type-bg\">\r\n                    <div class=\"home-card-small project\">\r\n                        <div class=\"text-box\">\r\n                            <p class=\"title\">Project 수행</p>\r\n                            <p class=\"text\"><span class=\"acc\">{{totalData.length}}</span> 건</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"inner-col col-1-2 chart\">\r\n                    <ProjectChart :showEnter=\"true\" />\r\n                </div>\r\n                <div class=\"inner-col col-1-2 chart\">\r\n                    <ProjectChart :showStack=\"true\" />\r\n                </div>\r\n                \r\n                <div class=\"inner-col col-1 chart\">\r\n                    <ProjectChart :showYear=\"true\" />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <MessageBox v-model=\"alertModel\" :item=\"alertItem\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted, watch, inject } from 'vue'\r\n// import { useStore } from 'vuex'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieCom.json'\r\nimport ProjectChart from '@/components/ProjectChart.vue'\r\nimport { fetchProjects } from '@/api/projectApi.js'\r\nimport MessageBox from '@/components/popup/MessageBox.vue'\r\n\r\nconst gitHubURL = inject('gitHubURL') // 개인포폴용 표시\r\n\r\nconst title = ref('홈 화면')\r\nconst pageClass = ref(['com', 'Home'])\r\n\r\n\r\nconst alertShow = (Boolean) => {\r\n    if(!Boolean) return\r\n    alertModel.value = true\r\n}\r\n\r\n// 얼럿\r\nconst alertModel = ref(false)\r\nconst alertItem = ref({\r\n    title: 'link 연동 해제',\r\n    message: `\r\n        <div class=\"error-message-box\">\r\n            <p class=\"text\">star1431 깃허브페이지로<br> link 연동 제거되었습니다.</p>\r\n        </div>\r\n    `,\r\n    textAlign: 'center',\r\n    innerHtml : true,\r\n    confirmText: '확인',\r\n    onCancel: () => {},\r\n    onConfirm: () => {},\r\n})\r\n\r\n// 유저프로필넣으려다가 lnb도 있으니 제거\r\n// const store = useStore()\r\n// const user = computed(() => store.state.user)\r\n// const setUserImg = computed(() => {\r\n//     if(user?.value?.img) {\r\n//         return require('@/assets/images/profile/' + user?.value?.img)\r\n//     } else {\r\n//         return require('@/assets/images/profile/' + 'img_user_profile_p.png')\r\n//     }\r\n// })\r\n// const setUserPos = computed(() => {\r\n//     if(user?.value?.pos) {\r\n//         if(user?.value?.pos === 'pub') return 'Web Publisher';\r\n//         if(user?.value?.pos === 'design') return 'Web Designer';\r\n//         else {\r\n//             return user?.value?.pos\r\n//         }\r\n//     } else {\r\n//         return 'Undefined'\r\n//     }\r\n// })\r\n// const setUserRole = computed(() => {\r\n//     if(user?.value?.role) {\r\n//         if(user?.value?.role === 'employee') return '정직원';\r\n//         if(user?.value?.role === 'freelancer') return '파트너';\r\n//         else {\r\n//             return user?.value?.role\r\n//         }\r\n//     } else {\r\n//         return 'Null'\r\n//     }\r\n// })\r\n\r\nconst totalData = reactive([])\r\nonMounted(async () => {\r\n    try {\r\n        const projects = await fetchProjects()\r\n        totalData.splice(0, totalData.length, ...projects)\r\n    } catch (error) {\r\n        console.error('[Home.vue || fetchProjects 에러] :', error)\r\n    }\r\n})\r\n\r\n\r\ncomputed(() => {\r\n\r\n})\r\nonMounted(() => {\r\n\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./Home.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Home.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div class=\"ui-field\">\r\n        <div \r\n            :class=\"['input-item', focusState, disabled ? 'is-disabled' : null, readonly ? 'is-readonly' : null, props.error ? 'is-error' : null ]\"\r\n            @focus=\"inputFocus\" \r\n            @blur=\"inputBlur\">\r\n            <input \r\n                class=\"ui-input\"\r\n                :id=\"inputId\" \r\n                v-model=\"inputValue\" \r\n                :type=\"inputType\" \r\n                :placeholder=\"placeholder\" \r\n                :title=\"title\" \r\n                :disabled=\"disabled\"\r\n                :readonly=\"readonly\"\r\n                @focus=\"inputFocus\" \r\n                @blur=\"inputBlur\"\r\n                @input=\"inputEv\"/>\r\n            <transition\r\n                @before-enter=\"btnBefEnt\"\r\n                @enter=\"btnEnt\"\r\n                @leave=\"btnLeave\">\r\n                <button class=\"btn-value-clear\" type=\"button\" v-show=\"clearShow\" @click=\"clearInput\" @focus=\"btnFocus\" @blur=\"btnBlur\">\r\n                    <i class=\"xi-close-circle xi-x\"></i>\r\n                    <span class=\"ally-hidden\">입력값 지우기</span>\r\n                </button>\r\n            </transition>\r\n        </div>\r\n        <p class=\"error-text\" v-if=\"props.error && props.error !== 'show'\">{{ props.error }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps, defineEmits } from 'vue'\r\n\r\nconst props = defineProps({\r\n    inputId: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    modelValue: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    inputType: {\r\n        type: String,\r\n        default: 'text'\r\n    },\r\n    placeholder: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    title: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    error: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    disabled: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    readonly: {\r\n        type: Boolean,\r\n        default: false\r\n    }\r\n})\r\nconst emits = defineEmits(['update:modelValue']) // 부모에서 v-model 양방향 바인딩 (양방향 제어)\r\nconst inputValue = ref(props.modelValue)\r\nconst clearShow = ref(false)\r\nconst focusState = ref('')\r\nconst clearFocused = ref(false)\r\n\r\n// 클리어 버튼\r\nconst clearInput = (e) => {\r\n    e.stopPropagation()\r\n    inputValue.value = ''\r\n    emits('update:modelValue', inputValue.value)\r\n}\r\n\r\n// 입력 전달 받음\r\nwatch(inputValue, (newValue) => {\r\n    emits('update:modelValue', newValue)\r\n})\r\n\r\n// 페이지 내 마운트시 벨류값 꽂을때 감시\r\nwatch(() => props.modelValue, (newValue) => {\r\n    inputValue.value = newValue\r\n})\r\n\r\n// [input] 이벤트\r\nconst inputFocus = () => {\r\n    if (props.disabled || props.readonly) return\r\n    focusState.value = 'is-focus'\r\n    if (inputValue.value !== '') {\r\n        setTimeout(() => {\r\n            clearShow.value = true\r\n        }, 50) // 버튼 인터렉션 이슈 추가\r\n    }\r\n}\r\nconst inputBlur = (e) => {\r\n    setTimeout(() => {\r\n        if (!clearFocused.value) {\r\n            clearShow.value = false\r\n        }\r\n    }, 150) // 버튼 탭포커스 이슈 추가\r\n    focusState.value = ''\r\n}\r\nconst inputEv = () => {\r\n    if (inputValue.value !== '') clearShow.value = true\r\n}\r\n\r\n// [clearBtn] 포커스 이벤트\r\nconst btnFocus = () => {\r\n    clearFocused.value = true\r\n}\r\n\r\nconst btnBlur = () => {\r\n    clearFocused.value = false\r\n    setTimeout(() => {\r\n        if (!document.activeElement.classList.contains('btn-value-clear')) {\r\n            clearShow.value = false\r\n        }\r\n    }, 150)\r\n}\r\n\r\n// [clearBtn] 트랜지션 hock\r\nconst btnBefEnt = (el) => {\r\n    el.style.transform = 'scale(0)'\r\n    el.style.opacity = 0\r\n}\r\nconst btnEnt = (el, done) => {\r\n    el.offsetHeight // 트리거 리플로우?\r\n    el.style.transition = 'transform 0.2s, opacity 0.2s'\r\n    el.style.transform = 'scale(1)'\r\n    el.style.opacity = 1\r\n    done()\r\n}\r\nconst btnLeave = (el, done) => {\r\n    el.style.transition = 'transform 0.2s, opacity 0.2s'\r\n    el.style.transform = 'scale(0)'\r\n    el.style.opacity = 0\r\n    setTimeout(() => {\r\n        done()\r\n    }, 200) // 이렇게까지 해야되나..\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./UiField.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UiField.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <!-- 비주얼 -->\r\n        <div class=\"login-visual\">\r\n            <LottieLoader :lottieData=\"lottieJson\" :startFrame=\"0\" :endFrame=\"110\"/>\r\n        </div>\r\n        <!--// 비주얼 -->\r\n        <!-- 로그인 -->\r\n        <div class=\"login-area\">\r\n            <div class=\"inner\">\r\n                <div class=\"text-box\">\r\n                    <h1 class=\"ui-logo beta-label\">\r\n                        <img class=\"logo\" :src=\"chageImg\" alt=\"SD\">\r\n                        <span>Archive</span>\r\n                    </h1>\r\n                </div>\r\n                <form class=\"form-default\" @submit.prevent=\"login\">\r\n                    <div class=\"form-field\">\r\n                        <div class=\"form-field-item\">\r\n                            <label for=\"userId\">아이디</label>\r\n                            <div class=\"input-box\">\r\n                                <UiField\r\n                                    inputId=\"userId\"\r\n                                    v-model=\"userName\"\r\n                                    placeholder=\"아이디 입력\"\r\n                                    :error=\"idError\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-field-item\">\r\n                            <label for=\"userPw\">비밀번호</label>\r\n                            <div class=\"input-box\">\r\n                                <UiField\r\n                                    inputId=\"userPw\"\r\n                                    v-model=\"passWord\"\r\n                                    inputType=\"password\"\r\n                                    placeholder=\"비밀번호 입력\"\r\n                                    :error=\"pwError\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field-bottom-slot\">\r\n                        <p class=\"error-text\" v-if=\"glError\">{{ glError }}</p>\r\n                        <div class=\"ui-checkbox\">\r\n                            <label>\r\n                                <input type=\"checkbox\" v-model=\"saveId\">\r\n                                <span class=\"check-inner\">아이디 저장</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"field-footer\">\r\n                        <button type=\"submit\" class=\"ui-button sq-primary\">로그인</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <!--// 로그인 -->\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport UiField from '@/components/UiField.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieCom.json'\r\n\r\nconst pageClass = ref(['com', 'Login'])\r\n\r\nconst userName = ref('')\r\nconst passWord = ref('')\r\nconst glError = ref(null)\r\nconst idError = ref(null)\r\nconst pwError = ref(null)\r\nconst saveId = ref(false)\r\nconst srcChange = ref(false)\r\n\r\nconst store = useStore()\r\nconst router = useRouter()\r\n\r\n// 로그인 서브밋\r\nconst login = async () => {\r\n    glError.value = null\r\n    idError.value = null\r\n    pwError.value = null\r\n\r\n    if (!userName.value) idError.value = '아이디를 입력하세요.'\r\n    if (!passWord.value) pwError.value = '비밀번호를 입력하세요.'\r\n    if (idError.value || pwError.value) return\r\n    try {\r\n        // 스토어\r\n        await store.dispatch('login', { username: userName.value, password: passWord.value })\r\n        // 로그인 성공 시 아이디 저장\r\n        if (saveId.value) {\r\n            localStorage.setItem('savedId', userName.value)\r\n        } else {\r\n            localStorage.removeItem('savedId')\r\n        }\r\n        if(document.querySelector('#app').classList.contains('logout-animation')) {\r\n            document.querySelector('#app').classList.replace('logout-animation', 'login-animation')\r\n        } else {\r\n            document.querySelector('#app').classList.add('login-animation')\r\n        }\r\n        router.push({ name: 'Home' })\r\n    } catch (err) {\r\n        glError.value = err\r\n        idError.value = 'show'\r\n        pwError.value = 'show'\r\n    }\r\n}\r\n\r\nconst chageImg = computed(() => {\r\n    if (!srcChange.value) {\r\n        return require('@/assets/images/common/img_logo_samdory_black.png')\r\n    } else {\r\n        return require('@/assets/images/common/img_logo_samdory_white.png')\r\n    } \r\n})\r\n\r\n\r\n\r\nonMounted(() => {\r\n    // // 새로고침 확인을 위한 세션 스토리지 키\r\n    // const RELOADED_KEY = 'pageReloaded'\r\n    // if (!sessionStorage.getItem(RELOADED_KEY)) {\r\n    //     // 세션 스토리지에 새로고침 표시 설정\r\n    //     sessionStorage.setItem(RELOADED_KEY, 'true')\r\n    //     location.reload()\r\n    // }\r\n\r\n    // 아이디저장값 갖고오기\r\n    const savedId = localStorage.getItem('savedId')\r\n    // console.log(savedId)\r\n    if (savedId) {\r\n        userName.value = savedId\r\n        saveId.value = true\r\n    }\r\n    // 테마 설정 가져오기\r\n    const _app = document.querySelector('#app')\r\n    const _savedTheme = localStorage.getItem('theme')\r\n    const _themeSet = sessionStorage.getItem('themeSet')\r\n    if (_themeSet) {\r\n        if (_savedTheme === 'dark') {\r\n            srcChange.value = true\r\n            _app.classList.add('dark-theme')\r\n        } else {\r\n            srcChange.value = false\r\n            _app.classList.remove('dark-theme')\r\n        }\r\n    } else {\r\n        // 세션 스토리지에 'themeSet'이 없으면 기본값을 설정\r\n        localStorage.removeItem('theme')\r\n        srcChange.value = false\r\n        _app.classList.remove('dark-theme')\r\n    }\r\n\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["fetchProjects","async","projects","error","console","props","__props","refEnter","ref","refStack","refYear","getTheme","localStorage","getItem","theme","seriesYear","chartYear","chart","type","toolbar","show","plotOptions","bar","barHeight","borderRadius","horizontal","borderRadiusApplication","distributed","xaxis","categories","mode","palette","monochrome","enabled","color","shadeTo","shadeIntensity","dataLabels","stroke","width","colors","legend","position","fill","opacity","tooltip","y","formatter","val","seriesEnter","chartEnter","pie","customScale","donut","size","value","labels","seriesStack","chartStack","setYearData","currentYear","yearArr","Array","from","length","_","i","data","map","year","filter","project","name","setEnterData","enterData","reduce","acc","enter","forEach","enterLabels","Object","keys","enterSeries","values","setStackData","stackData","stack","stackLabels","stackSeries","observer","MutationObserver","onMounted","appEl","document","querySelector","observe","attributes","attributeFilter","onBeforeUnmount","disconnect","watch","newTheme","enterVal","stackVal","updateOptions","computed","__exports__","gitHubURL","inject","title","pageClass","alertShow","Boolean","alertModel","alertItem","message","textAlign","innerHtml","confirmText","onCancel","onConfirm","totalData","reactive","splice","emits","__emit","inputValue","modelValue","clearShow","focusState","clearFocused","clearInput","e","stopPropagation","newValue","inputFocus","disabled","readonly","setTimeout","inputBlur","inputEv","btnFocus","btnBlur","activeElement","classList","contains","btnBefEnt","el","style","transform","btnEnt","done","offsetHeight","transition","btnLeave","userName","passWord","glError","idError","pwError","saveId","srcChange","store","useStore","router","useRouter","login","dispatch","username","password","setItem","removeItem","replace","add","push","err","chageImg","require","savedId","_app","_savedTheme","_themeSet","sessionStorage","remove"],"sourceRoot":""}