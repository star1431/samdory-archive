{"version":3,"file":"js/inf.e256a9fa.js","mappings":"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","sources":["webpack://samdory-archive/./src/api/projectApi.js","webpack://samdory-archive/./src/components/ProjectChart.vue","webpack://samdory-archive/./src/components/ProjectChart.vue?f519","webpack://samdory-archive/./src/posts/inf/파일서버.md","webpack://samdory-archive/./src/views/inf/CompanyFile.vue","webpack://samdory-archive/./src/views/inf/CompanyFile.vue?7e50","webpack://samdory-archive/./src/posts/inf/안내사항.md","webpack://samdory-archive/./src/views/inf/CompanyInfo.vue","webpack://samdory-archive/./src/views/inf/CompanyInfo.vue?450f","webpack://samdory-archive/./src/components/UiPagination.vue","webpack://samdory-archive/./src/components/UiPagination.vue?ed5c","webpack://samdory-archive/./src/views/inf/module/ProjectDetail.vue","webpack://samdory-archive/./src/views/inf/module/ProjectDetail.vue?0441","webpack://samdory-archive/./src/views/inf/CompanyProject.vue","webpack://samdory-archive/./src/views/inf/CompanyProject.vue?b993","webpack://samdory-archive/./src/assets/images/project/ sync ^\\.\\/.*$"],"sourcesContent":["// import axios from 'axios'\r\nimport projects from '@/mockup/projectData.json'\r\n\r\n// 프로젝트 데이터를 가져오는 함수\r\nexport const fetchProjects = async () => {\r\n    try {\r\n        // const response = await axios.get('@/mockup/projectData.json')\r\n        // return response.data\r\n        return projects\r\n    } catch (error) {\r\n        console.error('[api.js || fetchProjects 에러] :', error)\r\n        throw error\r\n    }\r\n}","<template>\r\n    <!-- https://apexcharts.com/vue-chart-demos/line-charts/ -->\r\n    <div class=\"chart-area bar\" v-if=\"props.showYear\">\r\n        <div class=\"chart-header\">\r\n            <div class=\"text-box\">\r\n                <p class=\"title\">연도별 프로젝트 현황</p>\r\n                <p class=\"sub-text\">최근 5년 기준</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"chart-body\">\r\n            <apexchart \r\n                ref=\"refYear\"\r\n                type=\"bar\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                :key=\"seriesYear.length\" \r\n                :options=\"chartYear\" \r\n                :series=\"seriesYear\">\r\n            </apexchart>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"chart-area donut\"  v-if=\"props.showEnter\" id=\"씨발년아\">\r\n        <div class=\"chart-header\">\r\n            <div class=\"text-box\">\r\n                <p class=\"title\">프로젝트 기업 유형</p>\r\n                <p class=\"sub-text\">고객사 업종</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"chart-body\">\r\n            <apexchart \r\n                ref=\"refEnter\"\r\n                type=\"donut\" \r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                :key=\"seriesEnter.length\" \r\n                :options=\"chartEnter\" \r\n                :series=\"seriesEnter\">\r\n            </apexchart>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"chart-area donut\" v-if=\"props.showStack\">\r\n        <div class=\"chart-header\">\r\n            <div class=\"text-box\">\r\n                <p class=\"title\">프로젝트 개발 환경</p>\r\n                <p class=\"sub-text\">활용한 프레임워크</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"chart-body donut\">\r\n            <apexchart \r\n                ref=\"refStack\"\r\n                type=\"donut\" \r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                :key=\"seriesStack.length\" \r\n                :options=\"chartStack\" \r\n                :series=\"seriesStack\">\r\n            </apexchart>\r\n        </div>\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps, watch, computed, onMounted, onBeforeUnmount } from 'vue'\r\nimport { fetchProjects  } from '@/api/projectApi.js'\r\n\r\nconst props = defineProps({\r\n    showYear: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    showEnter: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    showStack: {\r\n        type: Boolean,\r\n        default: false\r\n    }\r\n})\r\n\r\nconst refEnter = ref(null)\r\nconst refStack = ref(null)\r\nconst refYear = ref(null)\r\n\r\n// 테마 감지 \r\nconst getTheme = () => {\r\n    return localStorage.getItem('theme') === 'dark' ? 'dark' : 'light'\r\n}\r\nconst theme = ref(getTheme())\r\n// 연도차트 api\r\nconst seriesYear = ref([])\r\nconst chartYear = ref({\r\n    chart: { type: 'bar',toolbar: {show: false} },\r\n    plotOptions: {\r\n        bar: { \r\n            barHeight: '60%',\r\n            borderRadius: 6, \r\n            horizontal: true, \r\n            borderRadiusApplication: 'end', \r\n            distributed: true,\r\n            // isDumbbell: false,\r\n        },\r\n    },\r\n    xaxis: { categories: [] },\r\n    // colors: ['#238ed3', '#0b70fb', '#f64e60', '#059510', '#ffa800', '#7e6afd', '#03a917'],\r\n        theme: {\r\n        mode: 'light', \r\n        palette: 'palette2', \r\n        monochrome: {\r\n            enabled: false,\r\n            color: '#255aee',\r\n            shadeTo: 'light',\r\n            shadeIntensity: 1\r\n        },\r\n    },\r\n    dataLabels: { enabled: true },\r\n    stroke: { show: true, width: 2, colors: ['transparent'] },\r\n    legend: { show: true, position: 'top' },\r\n    fill: { opacity: 1 },\r\n    tooltip: { y: {formatter: (val) => {return `${val}`}} },\r\n})\r\n\r\n// 기업유형 차트 api\r\nconst seriesEnter = ref([])\r\nconst chartEnter = ref({\r\n    chart: { type: 'donut' },\r\n    plotOptions: {\r\n        pie:  { customScale: 1.08, donut: {size: '50%'} }\r\n    },\r\n    stroke: { show: true, width: 3, colors: theme.value === 'light' ? ['#fff'] : ['#14181e'] },\r\n    labels: [],\r\n    // colors: ['#238ed3', '#0b70fb', '#f64e60', '#059510', '#ffa800', '#7e6afd', '#03a917'],\r\n        theme: {\r\n        mode: 'light', \r\n        palette: 'palette2', \r\n        monochrome: {\r\n            enabled: false,\r\n            color: '#255aee',\r\n            shadeTo: 'light',\r\n            shadeIntensity: 1\r\n        },\r\n    },\r\n    legend: { show: true, position: 'right' },\r\n    dataLabels: { enabled: true },\r\n    tooltip: { y: {formatter: (val) => {return `${val}`}} },\r\n})\r\n\r\n// 개발환경 차트 api\r\nconst seriesStack = ref([])\r\nconst chartStack = ref({\r\n    chart: { type: 'donut' },\r\n    plotOptions: {\r\n        pie:  { customScale: 1.08, donut: {size: '50%'} }\r\n    },\r\n    stroke: { show: true, width: 3, colors: theme.value === 'light' ? ['#fff'] : ['#14181e'] },\r\n    labels: [],\r\n    // colors: ['#238ed3', '#0b70fb', '#f64e60', '#059510', '#ffa800', '#7e6afd', '#03a917'],\r\n        theme: {\r\n        mode: 'light', \r\n        palette: 'palette2', \r\n        monochrome: {\r\n            enabled: false,\r\n            color: '#255aee',\r\n            shadeTo: 'light',\r\n            shadeIntensity: 1\r\n        },\r\n    },\r\n    legend: { show: true, position: 'right' },\r\n    dataLabels: { enabled: true },\r\n    tooltip: { y: {formatter: (val) => {return `${val}`}} },\r\n})\r\n\r\n\r\n// 년도별 데이터 설정\r\nconst setYearData = (projects) => {\r\n    const currentYear = 2024 // 기준날짜 (추후 유지할때 현재날짜 받아서 넣어야함)\r\n    const yearArr = Array.from({ length: 5 }, (_, i) => currentYear - i)  // 최근 6년 까지\r\n    const data = yearArr.map(year => {\r\n        //지정한 년도들의 각각 총갯수 반환\r\n        return projects.filter(project => project.year == year).length\r\n    })\r\n    seriesYear.value = [{ name: '프로젝트 횟수', data: data }]\r\n    chartYear.value.xaxis.categories = yearArr\r\n}\r\n\r\n// 기업유형 데이터 설정\r\nconst setEnterData = (projects) => {\r\n    // json 배열 순회 enter 값 누적계산\r\n    const enterData = projects.reduce((acc, project) => {\r\n        project.enter.forEach(enter => {\r\n            // 'acc' 객체에 'enter' 키가 없으면 초기화\r\n            if (!acc[enter]) {\r\n                acc[enter] = 0\r\n            }\r\n            acc[enter] += 1\r\n        })\r\n        return acc \r\n        // 누적 객체 반환\r\n    }, {})\r\n    // 오브젝트 키 벨류 나눔\r\n    const enterLabels = Object.keys(enterData)\r\n    const enterSeries = Object.values(enterData)\r\n    // console.log(enterData)\r\n    seriesEnter.value = enterSeries\r\n    chartEnter.value.labels = enterLabels\r\n}\r\n\r\n// 개발환경 데이터 설정\r\nconst setStackData = (projects) => {\r\n    // json 배열 순회 stack 값 누적계산\r\n    const stackData = projects.reduce((acc, project) => {\r\n        project.stack.forEach(stack => {\r\n            // 'acc' 객체에 'stack' 키가 없으면 초기화\r\n            if (!acc[stack]) {\r\n                acc[stack] = 0\r\n            }\r\n            acc[stack] += 1\r\n        })\r\n        return acc\r\n        // 누적 객체 반환\r\n    }, {})\r\n    // 오브젝트 키 벨류 나눔\r\n    const stackLabels = Object.keys(stackData)\r\n    const stackSeries = Object.values(stackData)\r\n    seriesStack.value = stackSeries\r\n    chartStack.value.labels = stackLabels\r\n}\r\n\r\n// 감지추가\r\nconst observer = new MutationObserver(() => {\r\n    theme.value = getTheme()\r\n})\r\n\r\n\r\nonMounted(async () => {\r\n    const projects = await fetchProjects()\r\n    setYearData(projects)\r\n    setStackData(projects)\r\n    setEnterData(projects)\r\n\r\n    // theme 감지 (로컬스토리지 감지가 안되서 대응)\r\n    const appEl = document.querySelector('#app')\r\n    observer.observe(appEl, { attributes: true, attributeFilter: ['class'] })\r\n})\r\n\r\n// 컴포넌트 없어지면 감지 끔\r\nonBeforeUnmount(() => {\r\n    observer.disconnect()\r\n})\r\n\r\nwatch(theme, (newTheme) => {\r\n    // theme 감지 (로컬스토리지 감지가 안되서 대응)\r\n    const enterVal = chartEnter.value\r\n    const stackVal = chartStack.value\r\n    enterVal.stroke.colors = newTheme === 'dark' ? ['#14181e'] : ['#fff']\r\n    stackVal.stroke.colors = newTheme === 'dark' ? ['#14181e'] : ['#fff']\r\n    if (refEnter.value) {\r\n        refEnter.value.updateOptions({ stroke: enterVal.stroke })\r\n    }\r\n    if (refStack.value) {\r\n        refStack.value.updateOptions({ stroke: enterVal.stroke })\r\n    }\r\n})\r\n\r\ncomputed(() => {\r\n\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./ProjectChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectChart.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default \"---\\r\\ntitle: 파일 서버 이용 안내 \\r\\ndate: 2024.06\\r\\n---\\r\\n\\r\\n회사에서 사용하고 있는 FTP(file transfer protocol)를 이용하는 방법에 대해 설명합니다. FTP 는 두 가지 방법으로 접근할 수 있습니다.\\r\\n\\r\\n1. **파일질라 (FileZilla)**\\r\\n2. **시놀로지 나스 (Synology NAS)**\\r\\n\\r\\n각 방법에 대한 자세한 사용법은 아래에서 확인할 수 있습니다.\\r\\n\\r\\n> 계정 정보는 프로젝트 내 삼도리 직원 및 이상훈 대표님에게 아이디 생성 요청드리면 됩니다.\\r\\n{:class=\\\"prompt-tip\\\"}\\r\\n\\r\\n## 파일질라(FileZilla) 사용 방법\\r\\n\\r\\n### 파일질라 설치\\r\\n\\r\\n![파일질라 설치 관련 캡처 이미지](@/assets/images/post/post_inf_file_01.png)   \\r\\n\\r\\n1. [파일질라 공식 사이트](https://filezilla-project.org/){:target=\\\"_blank\\\"} 에서 파일질라 클라이언트를 다운로드하고 설치합니다.\\r\\n\\r\\n\\r\\n### 파일질라 설정\\r\\n\\r\\n![파일질라 설정 관련 캡처 이미지](@/assets/images/post/post_inf_file_02.png)   \\r\\n\\r\\n파일질라 설치가 완료되면 실행 합니다.<br>\\r\\n\\r\\n1. 상단 메뉴에서 `파일` -> `사이트 관리자`를 클릭합니다.\\r\\n2. `새 사이트` 버튼을 클릭하고 아래의 정보를 입력합니다.\\r\\n   - **프로토콜(t):** `FTP - 파일 전송 프로토콜`\\r\\n   - **호스트(H):** `samdory.synology.me`\\r\\n   - **포트(P):** `2121`\\r\\n   - **로그온 유형(L):** `일반`\\r\\n   - **사용자(U):** 회사에서 제공한 FTP 사용자명\\r\\n   - **비밀번호(W):** 회사에서 제공한 FTP 비밀번호\\r\\n3. `연결` 버튼을 클릭합니다.\\r\\n\\r\\n> 연결버튼 클릭 후 [알 수 없는 인증서] 창이 뜨는 경우, 무시하고 확인버튼 클릭 바랍니다.\\r\\n{:class=\\\"prompt-warning\\\"}\\r\\n\\r\\n### 파일 업로드 및 다운로드\\r\\n\\r\\n![파일질라 업로드 및 다운로드 관련 캡처 이미지](@/assets/images/post/post_inf_file_03.png) \\r\\n\\r\\n1. 파일질라의 우측 창에서 파일서버를 탐색합니다.\\r\\n2. 업로드 : 파일을 업로드하려면 좌측 창에서 파일을 선택하고 우측 창(서버)으로 드래그합니다.\\r\\n3. 다운로드 : 파일을 다운로드하려면 우측 창에서 파일을 선택하고 좌측 창(로컬)으로 드래그합니다.\\r\\n\\r\\n>  업로드 시 주의사항&nbsp;&nbsp;:&nbsp;&nbsp;업무 외 용도로 파일을 업로드하지 않도록 합니다.\\r\\n{:class=\\\"prompt-danger\\\"}\\r\\n\\r\\n\\r\\n## 시놀로지 나스(Synology NAS) 사용 방법\\r\\n\\r\\n### 시놀로지 나스 접근\\r\\n웹 브라우저를 열고 주소창에 [http://samdory.synology.me:5000/](http://samdory.synology.me:5000/){:target=\\\"_blank\\\"} 을 입력합니다.\\r\\n\\r\\n![시놀로지 나스 접근 관련 캡처 이미지](@/assets/images/post/post_inf_file_04.png)\\r\\n\\r\\n\\r\\n1. 사용자명과 비밀번호를 입력하여 로그인합니다.\\r\\n\\r\\n### 파일 업로드 및 다운로드\\r\\n\\r\\n\\r\\n![파일 업로드 및 다운로드 관련 캡처 이미지](@/assets/images/post/post_inf_file_05.png)\\r\\n\\r\\n1. 로그인 후, `파일 스테이션(File Station)`을 클릭합니다.\\r\\n2. 좌측 패널에서 탐색하고자 하는 폴더를 선택합니다.\\r\\n3. 업로드 : 파일을 업로드하려면 상단 메뉴에서 `업로드` 버튼을 클릭하고 파일을 선택합니다.\\r\\n4. 다운로드 : 파일을 다운로드하려면 파일을 선택하고 `다운로드` 버튼을 클릭합니다.\\r\\n\\r\\n>  업로드 시 주의사항&nbsp;&nbsp;:&nbsp;&nbsp;업무 외 용도로 파일을 업로드하지 않도록 합니다.\\r\\n{:class=\\\"prompt-danger\\\"}\\r\\n\\r\\n---\\r\\n\\r\\n위 안내 참고하여 회사의 파일 서버를 효율적으로 이용하시기 바랍니다.\\r\\n파일 서버 이용 중 문제가 발생하거나 도움이 필요하면 `이상훈 대표님`에게 연락해주시기 바랍니다.\\r\\n\";","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 posts\">\r\n                    <div class=\"lottie-banner\">\r\n                        <LottieLoader :lottieData=\"lottieJson\"/>\r\n                    </div>\r\n                    <PageMarkDown :loader=\"postMd\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport PageMarkDown from '@/components/PageMarkDown.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieInf.json'\r\nimport postMd from '@/posts/inf/파일서버.md' \r\n\r\nconst title = ref('파일서버')\r\nconst pageClass = ref(['inf', 'CompanyFile'])\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./CompanyFile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CompanyFile.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default \"---\\r\\ntitle: 연차 휴가 사용 시 안내사항\\r\\ndate: 2024.06\\r\\n---\\r\\n\\r\\n안녕하세요. 소중한 직원 여러분, 회사의 휴가 정책에 대해 안내드리고자 합니다. \\r\\n모든 삼도리 직원이 공평하고 원활하게 휴가를 사용할 수 있도록 하기 위해, 자세한 내용을 본 문서를 통해 안내드리고 있으니 확인바랍니다.\\r\\n\\r\\n> 연차 사용시 제출해야 될 [휴가 신청서] 양식이 있으므로 우측 목차 아이콘 클릭 후 '휴가 신청서 제출 (필수)' 를 통해 확인 바랍니다.\\r\\n{:class=\\\"prompt-info\\\"}\\r\\n\\r\\n\\r\\n## 1. 근로기준법에 따른 연차 지급 방식\\r\\n\\r\\n### 연차 휴가의 정의\\r\\n- 연차 유급 휴가는 근로자가 1년간 근로를 제공한 경우 주어지는 유급 휴가입니다.\\r\\n- 이는 근로자의 건강과 휴식을 보장하기 위한 제도로, 근로자가 재충전할 수 있는 시간을 제공합니다.\\r\\n\\r\\n\\r\\n### 연차 휴가 지급 기준\\r\\n- 1년 미만 근로자 : 매월 개근 시 1일의 연차 유급 휴가가 발생합니다. (입사일 기준 365일 미만)\\r\\n- 1년 이상 근로자 : 1년 동안 80% 이상 출근한 경우 15일의 연차 유급 휴가가 발생합니다.\\r\\n- 3년 이상 근로자 : 3년 이상 근로한 경우 2년마다 1일씩 추가로 발생합니다. (최대 25일)\\r\\n- **예외사항 :** 근로자가 질병, 사고 등으로 인해 장기 결근할 경우, 그 기간은 출근일수에서 제외될 수 있습니다.    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 2. 휴가 사용 시 제출 서류 및 절차\\r\\n\\r\\n### 연차 휴가 절차\\r\\n* **연차 휴가 사용 방법**\\r\\n    - 연차 휴가는 1일 단위로 사용할 수 있으며, 필요시 반일 단위로 사용할 수도 있습니다.\\r\\n    - 연차 휴가는 근로자가 원하는 시기에 사용할 수 있으나, 업무의 연속성을 위해 사전 보고가 필요합니다.\\r\\n        - 본사 근무 시 : `인사담당자`에게 보고 **(휴가 신청서 제출)**\\r\\n        - 파견 근무 시 : 프로젝트 내 `퍼블리셔PL` 보고 후 승인되면 `인사담당자`에게 보고 **(휴가 신청서 제출)**\\r\\n* **유의사항**\\r\\n    - 업무에 지장을 초래하지 않는 범위 내에서 연차 휴가를 사용해 주시기 바랍니다.\\r\\n    - 당일 사용 가능하오나, 파견 근무인 경우 프로젝트 내 진행 상황을 고려해 주시길 바랍니다.\\r\\n\\r\\n\\r\\n### 휴가 신청서 제출 (필수)\\r\\n- 휴가를 사용하고자 하는 경우, 휴가 신청서를 작성하여 `인사담당자`에게 보고와 함께 제출해 주시기 바랍니다.\\r\\n    -  제출 방법 : 카카오톡 및 이메일 첨부 등\\r\\n\\r\\n\\r\\n\\r\\n## 3. 파견 철수 후 프로젝트 휴가 안내\\r\\n\\r\\n프로젝트 철수 시, 소중한 직원 여러분들의 노고를 보상하기 위해 부여되는 포상 휴가입니다.\\r\\n\\r\\n* **프로젝트 휴가 지급 기준**\\r\\n    - 프로젝트 투입 기간과 야근 횟수를 감안하여 통상적으로 2~3일의 프로젝트 휴가가 제공됩니다.\\r\\n    - `인사담당자`에게 연락하여 정확한 휴가 일수를 결정합니다.\\r\\n* **유의사항**\\r\\n    - 다음 프로젝트 투입 시기에 따라, 프로젝트 휴가 사용 조율이 필요합니다.\\r\\n    - 투입 기간이 짧은 경우 프로젝트 휴가가 없을 수 있다는 점 참고 바랍니다.\\r\\n\\r\\n---\\r\\n\\r\\n문의사항이 있으신 경우 `인사담당자`에게 연락 바랍니다.<br>감사합니다.\\r\\n\";","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 posts\">\r\n                    <div class=\"lottie-banner\">\r\n                        <LottieLoader :lottieData=\"lottieJson\"/>\r\n                    </div>\r\n                    <PageMarkDown :loader=\"postMd\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport PageMarkDown from '@/components/PageMarkDown.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieInf.json'\r\nimport postMd from '@/posts/inf/안내사항.md' \r\n\r\nconst title = ref('안내사항')\r\nconst pageClass = ref(['inf', 'CompanyInfo'])\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./CompanyInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CompanyInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div class=\"ui-pagination\">\r\n        <span class=\"ally-hidden\">\r\n            총 페이지는 {{ totalPage }} 이며,\r\n            현재 페이지는 {{ modelValue }} 입니다.\r\n        </span>\r\n        <div class=\"button-group\">\r\n            <button class=\"button-prev\" type=\"button\" @click=\"preEv\" :disabled=\"modelValue === 1\">\r\n                <span class=\"ally-hidden\">이전</span>\r\n            </button>\r\n            <div class=\"paging\">\r\n                <button \r\n                    class=\"button-number\"\r\n                    type=\"button\"\r\n                    v-for=\"page in numberControl\" \r\n                    :key=\"page\" \r\n                    @click=\"goToPage(page)\"\r\n                    :class=\"{ active: page === modelValue }\">\r\n                    <span class=\"text\">{{ page }}</span>\r\n                </button>\r\n            </div>\r\n            <button class=\"button-next\" type=\"button\" @click=\"nextEv\" :disabled=\"modelValue === totalPage\">\r\n                <span class=\"ally-hidden\">다음</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, defineProps, defineEmits } from 'vue'\r\n\r\nconst props = defineProps({\r\n    totalPage: {\r\n        type: Number,\r\n        required: true\r\n    },\r\n    modelValue: {\r\n        type: Number,\r\n        required: true\r\n    }\r\n})\r\n\r\nconst emits = defineEmits(['update:modelValue']) // 부모에서 v-model 양방향 바인딩 (currentPage)\r\n\r\n// 넘버 제어\r\nconst numberControl = computed(() => {\r\n    const total = props.totalPage                   // 전체 넘버\r\n    const current = props.modelValue                // 현재 넘버\r\n    const viewCnt = 2                               // 선택 값 기준 중심에서 양쪽 갯수\r\n    const range = []                                // 번호추가 배열\r\n    let start = Math.max(1, current - viewCnt)      // 시작넘버 값\r\n    let end = Math.min(total, current + viewCnt)    // 마지막넘버 값\r\n\r\n    // 현재 넘버가 viewCnt 이하일 때\r\n    if (current <= viewCnt) {\r\n        end = Math.min(total, 5)                    // total값이랑 5 중 제일 작은 수 할당 (화면 보이는 숫자갯수 최대5개 설정임)\r\n    } else if (current > total - viewCnt) {         // 현재 넘버가 (전체 넘버 - viewCnt)보다 작으면\r\n        start = Math.max(1, total - 4)              // 시작 넘버를 최대 (total - 4)로 설정\r\n    }\r\n\r\n    // 이제 담기\r\n    for (let i = start; i <= end; i++) {\r\n        range.push(i)\r\n    }\r\n\r\n    return range\r\n})\r\n\r\nconst preEv = () => {\r\n    if (props.modelValue > 1) {\r\n        emits('update:modelValue', props.modelValue - 1)  // 이전 (-1)\r\n    }\r\n}\r\n\r\nconst nextEv = () => {\r\n    if (props.modelValue < props.totalPage) {\r\n        emits('update:modelValue', props.modelValue + 1) // 다음 (+1)\r\n    }\r\n}\r\n\r\nconst goToPage = (page) => {\r\n    emits('update:modelValue', page) // 그 페이지 이동\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./UiPagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UiPagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div class=\"popup-wrap\" role=\"document\" v-if=\"props.item !== null\">\r\n        <div class=\"popup-header\">\r\n            <div class=\"title-box\">\r\n                <span class=\"title\">프로젝트 상세보기</span>\r\n            </div>\r\n        </div>\r\n        <OverlayScrollbarsComponent :options=\"{ scrollbars: { autoHide: 'scroll' } }\" defer>\r\n            <div class=\"popup-content\">\r\n                <div class=\"project-info-area\">\r\n                    <div class=\"project-info-header\">\r\n                        <div class=\"title-box\">\r\n                            <span class=\"title\">{{ item.name }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"project-info-body\">\r\n                        <div :class=\"['preview-img-box', deviceClass]\">\r\n                            <div class=\"mockup-pc\">\r\n                                <template v-if=\"item.imgfile[0].pc !== null\">\r\n                                    <img class=\"pc\" :src=\"getImageUrl(item.imgfile[0].pc)\" alt=\"pc or tablet 이미지\" />\r\n                                </template>\r\n                                <template v-else-if=\"item.imgfile[0].pc === null && item.dev.includes('pc') || item.dev.includes('tablet')\">\r\n                                    <div class=\"no-data-box\">\r\n                                        <span class=\"text\">No Data</span>\r\n                                    </div>\r\n                                </template>\r\n                            </div>\r\n                            <div class=\"mockup-mobile\">\r\n                                <template v-if=\"item.imgfile[0].mb !== null\">\r\n                                    <img class=\"mobile\" :src=\"getImageUrl(item.imgfile[0].mb)\" alt=\"mobile 이미지\" />\r\n                                </template>\r\n                                <template v-else-if=\"item.imgfile[0].mb === null && item.dev.includes('mobile')\">\r\n                                    <div class=\"no-data-box\">\r\n                                        <span class=\"text\">No Data</span>\r\n                                    </div>\r\n                                </template>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"info-group\">\r\n                            <div class=\"inner\">\r\n                                <ul class=\"info-list\">\r\n                                    <li class=\"item\">\r\n                                        <div class=\"item-name\">\r\n                                            <span class=\"name\">시작년도</span>\r\n                                        </div>\r\n                                        <div class=\"item-content\">\r\n                                            <span class=\"text\">{{ item.year }}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"item\">\r\n                                        <div class=\"item-name\">\r\n                                            <span class=\"name\">디바이스</span>\r\n                                        </div>\r\n                                        <div class=\"item-content\">\r\n                                            <span class=\"text\">{{ item.dev.join(', ') }}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"item\">\r\n                                        <div class=\"item-name\">\r\n                                            <span class=\"name\">개발환경</span>\r\n                                        </div>\r\n                                        <div class=\"item-content\">\r\n                                            <span class=\"text\">{{ item.stack.join(', ') }}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"item\">\r\n                                        <div class=\"item-name\">\r\n                                            <span class=\"name\">기업유형</span>\r\n                                        </div>\r\n                                        <div class=\"item-content\">\r\n                                            <span class=\"text\">{{ item.enter.join(', ') }}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"item\">\r\n                                        <div class=\"item-name\">\r\n                                            <span class=\"name\">업무형태</span>\r\n                                        </div>\r\n                                        <div class=\"item-content\">\r\n                                            <span class=\"text\">{{ item.project.join(', ') }}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"item\">\r\n                                        <div class=\"item-name\">\r\n                                            <span class=\"name\">사이트주소</span>\r\n                                        </div>\r\n                                        <div class=\"item-content\">\r\n                                            <span class=\"text\">\r\n                                                <a v-if=\"item.site[0].link1 !== null\" class=\"item-link\" :href=\"item.site[0].link1\" target=\"_blank\">사이트 이동</a>\r\n                                                <span class=\"no-link\" v-else>찾을 수 없음</span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li class=\"item size-full\">\r\n                                        <div class=\"item-name\">\r\n                                            <span class=\"name\">업무내용</span>\r\n                                        </div>\r\n                                        <div class=\"item-content\">\r\n                                            <span class=\"text\">{{ item.work.join(', ') }}</span>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </OverlayScrollbarsComponent>\r\n        <div class=\"popup-footer\">\r\n            <div class=\"c-confirm-button-box\">\r\n                <button type=\"button\" class=\"ui-button sq-primary\" @click=\"$emit('close')\">확인</button>\r\n            </div>\r\n        </div>\r\n        \r\n        <button class=\"button-close\" @click=\"$emit('close')\">\r\n            <span class=\"ally-hidden\">팝업닫기</span>\r\n        </button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps, computed } from 'vue'\r\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-vue\" \r\n\r\nconst props = defineProps({\r\n    item: {\r\n        type: Object,\r\n        required: true\r\n    }\r\n})\r\n\r\nconst deviceClass = computed(() => {\r\n    if (props.item.dev.includes('pc') && props.item.dev.includes('mobile')) {\r\n        return ''\r\n    }\r\n    if (props.item.dev.includes('pc') || props.item.dev.includes('tablet')) {\r\n        return 'pc-only'\r\n    }\r\n    if (props.item.dev.includes('mobile')) {\r\n        return 'mb-only'\r\n    }\r\n    return ''\r\n})\r\n\r\nconst getImageUrl = (filename) => {\r\n    if (!filename) return ''\r\n    try {\r\n        return require(`@/assets/images/project/${filename}`)\r\n    } catch (error) {\r\n        console.error(`이미지 없단다 : ${filename}`)\r\n        return ''\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./ProjectDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1-2 chart\">\r\n                    <ProjectChart :showEnter=\"true\" />\r\n                </div>\r\n                <div class=\"inner-col col-1-2 chart\">\r\n                    <ProjectChart :showStack=\"true\" />\r\n                </div>\r\n                <div class=\"inner-col col-1 chart\">\r\n                    <ProjectChart :showYear=\"true\" />\r\n                </div>\r\n                <div class=\"inner-col col-1 table\">\r\n                    <div class=\"table-area\">\r\n                        <div class=\"table-header\">\r\n                            <div class=\"text-box\">\r\n                                <p class=\"title\">프로젝트 목록</p>\r\n                            </div>\r\n                            <div class=\"slot-bottom\">\r\n                                <p class=\"sub-text\">총 <span class=\"count\">{{ tableData.length }}</span> 건</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-body\">\r\n                            <div class=\"pure-board-list-table\">\r\n                                <table>\r\n                                    <caption>프로젝트 목록 게시판</caption>\r\n                                    <thead class=\"ally-hidden\">\r\n                                        <tr>\r\n                                            <th scope=\"col\">목록 번호</th>\r\n                                            <th scope=\"col\">목록 내용</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr class=\"row\" v-for=\"(item, i) in paginatedData\" :key=\"item.id\" @click=\"openPopup(item)\">\r\n                                            <td class=\"cell-num\">\r\n                                                <div class=\"num\">\r\n                                                    <span>{{ tableData.length - ((currentPage - 1) * itemsPerPage + i) }}</span>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td class=\"cell-content\">\r\n                                                <div class=\"item\">\r\n                                                    <div class=\"item-head\">\r\n                                                        <div class=\"title-box\">\r\n                                                            <a class=\"title\" href=\"javascript:void(0)\">{{ item.name }}</a> \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"item-body\">\r\n                                                        <ul class=\"item-sub-list\">\r\n                                                            <li><span class=\"txt\">{{ item.year }}</span></li>\r\n                                                            <li><span class=\"txt\">{{ item.dev.join(', ') }}</span></li>\r\n                                                            <li><span class=\"txt\">{{ item.stack.join(', ') }}</span></li>\r\n                                                            <li><span class=\"txt\">{{ item.enter.join(', ') }}</span></li>\r\n                                                            <li><span class=\"txt\">{{ item.project.join(', ') }}</span></li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-footer\">\r\n                            <UiPagination :totalPage=\"totalPages\" v-model=\"currentPage\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- 팝업 컴포넌트 -->\r\n    <PopupUI customClass=\"full size-large\" v-model=\"isPopupVisible\" @close=\"closePopup\">\r\n        <ProjectDetail :item=\"selectedItem\" @close=\"closePopup\"/>\r\n    </PopupUI>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport { fetchProjects } from '@/api/projectApi.js'\r\nimport ProjectChart from '@/components/ProjectChart.vue'\r\nimport UiPagination from '@/components/UiPagination.vue'\r\nimport ProjectDetail  from '@/views/inf/module/ProjectDetail.vue'\r\nconst title = ref('프로젝트 통계')\r\nconst pageClass = ref(['inf', 'CompanyProject'])\r\n\r\nconst tableData = reactive([])\r\nconst itemsPerPage = 4\r\nconst currentPage = ref(1)\r\n\r\nconst totalPages = computed(() => Math.ceil(tableData.length / itemsPerPage))\r\n\r\nconst paginatedData = computed(() => {\r\n    const start = (currentPage.value - 1) * itemsPerPage\r\n    return tableData.slice(start, start + itemsPerPage)\r\n})\r\n\r\nonMounted(async () => {\r\n    try {\r\n        const projects = await fetchProjects()\r\n        tableData.splice(0, tableData.length, ...projects)\r\n    } catch (error) {\r\n        console.error('[CompanyProject.vue || fetchProjects 에러] :', error)\r\n    }\r\n})\r\n\r\n\r\nconst isPopupVisible = ref(false)\r\nconst selectedItem = ref(null)\r\n\r\nconst openPopup = (item) => {\r\n    isPopupVisible.value = true\r\n    selectedItem.value = item\r\n}\r\n\r\nconst closePopup = () => {\r\n    // console.log('안녕?난부모의 closePopup야')\r\n    isPopupVisible.value = false\r\n    selectedItem.value = null\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./CompanyProject.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CompanyProject.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","var map = {\n\t\"./2019_NH베트남_mb.png\": 9162,\n\t\"./2019_NH베트남_pc.png\": 5628,\n\t\"./2019_SC제일은행_하이브리드_mb.png\": 9912,\n\t\"./2019_한화아쿠아플라넷_pc.png\": 8505,\n\t\"./2020_롯데스카이힐_pc.png\": 8119,\n\t\"./2020_르노캐피탈_mb.png\": 9188,\n\t\"./2020_해피포인트_mb.png\": 2808,\n\t\"./2020_해피포인트_pc.png\": 1586,\n\t\"./2021_KB카드_ 디지털채널_mb.png\": 1797,\n\t\"./2021_KB카드_ 디지털채널_pc.png\": 3491,\n\t\"./2021_현대H몰_pc.png\": 6849,\n\t\"./2022_KBstarCMS_pc.png\": 4738,\n\t\"./2022_신한기업뱅킹_mb.png\": 1421,\n\t\"./2022_신한기업뱅킹_pc.png\": 2955,\n\t\"./2022_한기데_mb.png\": 3250,\n\t\"./2022_한기데_pc.png\": 1588,\n\t\"./2023_1388청소년_mb.png\": 4698,\n\t\"./2023_1388청소년_pc.png\": 8316,\n\t\"./2023_NH농협_글로벌_pc.png\": 4324,\n\t\"./2023_신한쏠비즈_mb.png\": 6098,\n\t\"./2023_우리은행_CMS_mb.png\": 1964,\n\t\"./2023_우리은행_CMS_pc.png\": 7470,\n\t\"./2024_NH농협_디지털_mb.png\": 7717,\n\t\"./2024_또래상담_mb.png\": 7839,\n\t\"./2024_또래상담_pc.png\": 477,\n\t\"./2024_우리카드_mb.png\": 5498,\n\t\"./KB캐피탈_차차차_mb.png\": 3379,\n\t\"./mockup/img-mockup-background.png\": 8541,\n\t\"./mockup/img-mockup-mobile.png\": 3823,\n\t\"./mockup/img-mockup-tablet.png\": 4601\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2293;"],"names":["fetchProjects","async","projects","error","console","props","__props","refEnter","ref","refStack","refYear","getTheme","localStorage","getItem","theme","seriesYear","chartYear","chart","type","toolbar","show","plotOptions","bar","barHeight","borderRadius","horizontal","borderRadiusApplication","distributed","xaxis","categories","mode","palette","monochrome","enabled","color","shadeTo","shadeIntensity","dataLabels","stroke","width","colors","legend","position","fill","opacity","tooltip","y","formatter","val","seriesEnter","chartEnter","pie","customScale","donut","size","value","labels","seriesStack","chartStack","setYearData","currentYear","yearArr","Array","from","length","_","i","data","map","year","filter","project","name","setEnterData","enterData","reduce","acc","enter","forEach","enterLabels","Object","keys","enterSeries","values","setStackData","stackData","stack","stackLabels","stackSeries","observer","MutationObserver","onMounted","appEl","document","querySelector","observe","attributes","attributeFilter","onBeforeUnmount","disconnect","watch","newTheme","enterVal","stackVal","updateOptions","computed","__exports__","title","pageClass","emits","__emit","numberControl","total","totalPage","current","modelValue","viewCnt","range","start","Math","max","end","min","push","preEv","nextEv","goToPage","page","deviceClass","item","dev","includes","getImageUrl","filename","require","itemsPerPage","tableData","reactive","currentPage","totalPages","ceil","paginatedData","slice","splice","isPopupVisible","selectedItem","openPopup","closePopup","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports"],"sourceRoot":""}