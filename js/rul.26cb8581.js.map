{"version":3,"file":"js/rul.26cb8581.js","mappings":"kPAAA,+hf,+JCiDA,MAAMA,GAAQC,EAAAA,EAAAA,IAAI,aACZC,GAAYD,EAAAA,EAAAA,IAAI,CAAC,MAAO,a,qWC/C9B,MAAME,EAAc,EAEpB,O,6ICLA,q65B,+JCiDA,MAAMH,GAAQC,EAAAA,EAAAA,IAAI,gBACZC,GAAYD,EAAAA,EAAAA,IAAI,CAAC,MAAO,a,qWC/C9B,MAAME,EAAc,EAEpB,O,6ICLA,slQ,+JCyBA,MAAMH,GAAQC,EAAAA,EAAAA,IAAI,SACZC,GAAYD,EAAAA,EAAAA,IAAI,CAAC,MAAO,a,qWCvB9B,MAAME,EAAc,EAEpB,O,6ICLA,ilL,kKC0BA,MAAMH,GAAQC,EAAAA,EAAAA,IAAI,SACZC,GAAYD,EAAAA,EAAAA,IAAI,CAAC,MAAO,gB,qWCxB9B,MAAME,EAAc,EAEpB,O,6ICLA,gvJ,+JCyBA,MAAMH,GAAQC,EAAAA,EAAAA,IAAI,SACZC,GAAYD,EAAAA,EAAAA,IAAI,CAAC,MAAO,a,qWCvB9B,MAAME,EAAc,EAEpB,O","sources":["webpack://samdory-archive/./src/posts/rul/웹접근성가이드.md","webpack://samdory-archive/./src/views/rul/RuleAlly.vue","webpack://samdory-archive/./src/views/rul/RuleAlly.vue?bc6a","webpack://samdory-archive/./src/posts/rul/WAI-ARIA가이드.md","webpack://samdory-archive/./src/views/rul/RuleAria.vue","webpack://samdory-archive/./src/views/rul/RuleAria.vue?0f2b","webpack://samdory-archive/./src/posts/rul/코드규칙.md","webpack://samdory-archive/./src/views/rul/RuleCode.vue","webpack://samdory-archive/./src/views/rul/RuleCode.vue?ad70","webpack://samdory-archive/./src/posts/rul/기본규칙.md","webpack://samdory-archive/./src/views/rul/RuleDefault.vue","webpack://samdory-archive/./src/views/rul/RuleDefault.vue?39bb","webpack://samdory-archive/./src/posts/rul/네임규칙.md","webpack://samdory-archive/./src/views/rul/RuleName.vue","webpack://samdory-archive/./src/views/rul/RuleName.vue?ed75"],"sourcesContent":["export default \"\\r\\n\\r\\n---\\r\\ntitle: 웹 접근성 가이드 안내\\r\\ndate: 2024.06\\r\\n---\\r\\n\\r\\n\\r\\n> 본 문서는 [레진 웹 접근성 가이드라인](https://github.com/lezhin/accessibility/blob/master/README.md){:target=\\\"_blank\\\"} 을 기반으로 작성되었습니다.<br>해당 내용은 MIT License 조건 하에 제공됩니다.\\r\\n{:class=\\\"prompt-info\\\"}\\r\\n\\r\\n\\r\\n## 웹 접근성 개요\\r\\n\\r\\n\\r\\n이 가이드라인은 [WCAG 2.1](https://www.w3.org/TR/WCAG21/){:target=\\\"_blank\\\"} 이 근간이며 가이드라인에서 설명하지 않거나 애매한 주제는 WCAG 2.1의 수준 A 항목과 AA 항목의 지침 및 평가 방법을 따라야 합니다.\\r\\n\\r\\n이 가이드라인은 웹 기술(HTML, CSS, JavaScript)에 대한 사전 지식을 요구합니다.\\r\\n\\r\\n\\r\\n- **사례 참고 사이트**\\r\\n    - 접근성 지침 예시 1 : https://nuli.navercorp.com/guideline/s01/g01{:target=\\\"_blank\\\"}\\r\\n    - 접근성 지침 예시 2 : http://www.websoul.co.kr/consulting/guide1_01.asp{:target=\\\"_blank\\\"} &nbsp;\\r\\n\\r\\n\\r\\n## 1. 의미를 전달하고 있는 이미지에 대체 텍스트를 제공한다.\\r\\n* 대체 텍스트는 이미지의 시각적 의도와 동등한 내용을 전달한다.\\r\\n* 대체 텍스트는 중복으로 제공하지 않는다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<img src=\\\"lezhin.png\\\">\\r\\n<img src=\\\"lezhin.png\\\" alt>\\r\\n<img src=\\\"lezhin.png\\\" alt=\\\"\\\">\\r\\n<img src=\\\"lezhin.png\\\" title=\\\"레진엔터테인먼트\\\">\\r\\n<img src=\\\"lezhin.png\\\" alt=\\\"레진엔터테인먼트\\\" title=\\\"레진엔터테인먼트\\\">\\r\\n\\r\\n<!-- O -->\\r\\n<img src=\\\"lezhin.png\\\" alt=\\\"레진엔터테인먼트\\\">\\r\\n\\r\\n<!-- X -->\\r\\n<a href=\\\"/\\\">\\r\\n    <img src=\\\"lezhin.png\\\" alt=\\\"레진엔터테인먼트\\\"> 레진엔터테인먼트\\r\\n</a>\\r\\n\\r\\n<!-- O -->\\r\\n<a href=\\\"/\\\">\\r\\n    <img src=\\\"lezhin.png\\\" alt> 레진엔터테인먼트\\r\\n</a>\\r\\n\\r\\n<!-- X -->\\r\\n<a href=\\\"/\\\" style=\\\"background:url(lezhin.png) no-repeat\\\"></a>\\r\\n\\r\\n<!-- O -->\\r\\n<a href=\\\"/\\\" style=\\\"background:url(lezhin.png) no-repeat\\\">레진엔터테인먼트</a>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 전맹 사용자에게 음성 해설을 제공할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [1.1.1 Non-text Content](https://www.w3.org/TR/WCAG21/#non-text-content){:target=\\\"_blank\\\"}\\r\\n\\r\\n#### 평가 도구\\r\\n* [OpenWAX](https://chrome.google.com/webstore/detail/openwax/bfahpbmaknaeohgdklfbobogpdngngoe?hl=ko){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 2. 전경 콘텐츠와 배경은 4.5:1 이상의 명도 대비를 유지한다.\\r\\n* 전경 콘텐츠는 정보를 전달하고 있는 '문자, 아이콘, 콘트롤(a, button, input, select, textarea)'의 선과 면을 의미한다.\\r\\n* 문자 크기가 bold 19px 이상 또는 normal 24px 이상인 경우 3:1 이상의 명도 대비를 유지한다.\\r\\n* 아이콘, 콘트롤 등 시각 정보가 3px 이상 두꺼운 경우 3:1 이상의 명도 대비를 유지한다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<body style=\\\"background:#fff\\\">\\r\\n    <p style=\\\"color:#777\\\">레진엔터테인먼트</p>\\r\\n</body>\\r\\n\\r\\n<!-- O -->\\r\\n<body style=\\\"background:#fff\\\">\\r\\n    <p style=\\\"color:#767676\\\">레진엔터테인먼트</p>\\r\\n</body>\\r\\n\\r\\n<!-- X -->\\r\\n<body style=\\\"background:#fff\\\">\\r\\n    <input style=\\\"border:1px solid #777\\\">\\r\\n</body>\\r\\n\\r\\n<!-- O -->\\r\\n<body style=\\\"background:#fff\\\">\\r\\n    <input style=\\\"border:1px solid #767676\\\">\\r\\n</body>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 저시력 사용자가 내용을 빠르게 인지할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n\\r\\n* [1.4.3 Contrast(Minimum)](https://www.w3.org/TR/WCAG21/#contrast-minimum){:target=\\\"_blank\\\"}\\r\\n* [1.4.11 Graphics Contrast](https://www.w3.org/TR/WCAG21/#graphics-contrast){:target=\\\"_blank\\\"}\\r\\n* [1.4.12 User Interface Component Contrast(Minimum)](https://www.w3.org/TR/WCAG21/#user-interface-component-contrast-minimum){:target=\\\"_blank\\\"}\\r\\n\\r\\n#### 평가 도구\\r\\n* [Colour Contrast Check](https://snook.ca/technical/colour_contrast/colour.html#fg=33FF33,bg=333333){:target=\\\"_blank\\\"}\\r\\n* [Accessible Color Generator](https://learnui.design/tools/accessible-color-generator.html){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 3. 화면을 400%까지 확대할 수 있다.\\r\\n* 너비 1,280 픽셀 해상도 모니터에서 400%까지 확대할 수 있다. 모바일 단말에서는 테스트하지 않는다.\\r\\n* 화면을 400% 확대한 상태에서 내용과 기능에 손실이 없어야 하고, 2차원 스크롤이 발생하지 않아야 한다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\nhttp://www.president.go.kr/\\r\\n\\r\\n<!-- O -->\\r\\nhttps://www.whitehouse.gov/\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 저시력 사용자가 내용을 빠르게 인지할 수 있다.\\r\\n* 하나의 소스 만으로 모든 해상도의 출력 장치에 대응 가능하다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [1.4.10 Zoom content](https://www.w3.org/TR/WCAG21/#zoom-content){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 4. 키보드만으로 조작할 수 있다.\\r\\n* 구현된 키보드 접근 순서는 논리적으로 설명할 수 있어야 한다.\\r\\n* 초점을 받은 요소는 시각적 단서를 제공해야 한다.\\r\\n\\r\\n```css\\r\\n<!-- X -->\\r\\na:hover{ color: #000; }\\r\\n\\r\\n<!-- O -->\\r\\na:hover,\\r\\na:focus{ color: #000; }\\r\\n\\r\\n<!-- X -->\\r\\n$(document).on(\\\"mouseover\\\", \\\".gnb a\\\", function() { ... });\\r\\n\\r\\n<!-- O -->\\r\\n$(document).on(\\\"mouseover focus\\\", \\\".gnb a\\\", function() { ... });\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 전맹 또는 상지 장애가 있는 사용자와 키보드를 선호하는 사용자의 탐색과 조작을 돕는다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [2.1.1 Keyboard](https://www.w3.org/TR/WCAG21/#keyboard){:target=\\\"_blank\\\"}\\r\\n* [2.1.2 No Keyboard Trap](https://www.w3.org/TR/WCAG21/#no-keyboard-trap){:target=\\\"_blank\\\"}\\r\\n* [2.4.3 Focus Order](https://www.w3.org/TR/WCAG21/#focus-order){:target=\\\"_blank\\\"}\\r\\n* [2.4.7 Focus Visible](https://www.w3.org/TR/WCAG21/#focus-visible){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 5. 사용할 수 있는 충분한 시간을 제공한다. \\r\\n* 시간 제한이 있는 정보는 시간 제한을 끄거나, 또는 최소 20초 이상 10회까지 연장할 수 있다.\\r\\n* 자동으로 갱신되는 정보에는 '정지, 이전, 다음' 기능을 제공한다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n10초 후 다음 페이지로 넘어갑니다. [다음 페이지로 즉시 이동]\\r\\n\\r\\n<!-- O -->\\r\\n20초 후 다음 페이지로 넘어갑니다. [취소] [다음 페이지로 즉시 이동]\\r\\n20초 후 다음 페이지로 넘어갑니다. [20초 연장] [다음 페이지로 즉시 이동]\\r\\n\\r\\n<!-- X -->\\r\\n콘텐츠가 자동으로 슬라이드 되고 있는 상황에서 정지하거나 이전, 다음 콘텐츠를 탐색할 수 없다.\\r\\n\\r\\n<!-- O -->\\r\\n콘텐츠가 자동으로 슬라이드 되고 있지만 정지, 이전, 다음 기능을 제공하고 있다.\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 학습장애 또는 난독증세가 있는 사람이 내용을 이해할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [2.2.1 Timing Adjustable](https://www.w3.org/TR/WCAG21/#timing-adjustable){:target=\\\"_blank\\\"}\\r\\n* [2.2.2 Pause, Stop, Hide](https://www.w3.org/TR/WCAG21/#pause-stop-hide){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 6. 발작을 유발하는 콘텐츠를 제공하지 않는다. \\r\\n* 1초에 3~50회 사이의 번쩍이는 콘텐츠는 광과민성 발작을 유발할 수 있다.\\r\\n* 광과민성 발작은 소아 또는 간질 경험이 있는 사람에게 더 위험하다.\\r\\n    - 포켓몬 발작 사고 영상 - [YouTube](https://www.youtube.com/watch?v=gwoQRKCEHgY){:target=\\\"_blank\\\"}  \\r\\n    - 소아 또는 간질 경험이 있는 사람에게 발작 위험.\\r\\n\\r\\n#### 기대 효과\\r\\n* 소아 또는 간질 경험이 있는 사람의 발작을 예방할 수 있다.\\r\\n#### 관련 표준\\r\\n* [2.3.1 Three Flashes or Below Threshold](https://www.w3.org/TR/WCAG21/#three-flashes-or-below-threshold){:target=\\\"_blank\\\"}\\r\\n* [2.3.2 Three Flashes](https://www.w3.org/TR/WCAG21/#three-flashes){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 7. 반복되는 콘텐츠 블록을 건너뛸 수 있다.\\r\\n* 일반적으로 글로벌 탐색 바와 로컬 탐색 바는 반복되는 콘텐츠 블록이다.\\r\\n* 반복되는 콘텐츠 블록이 있는 경우 페이지 시작 위치에 '본문으로 건너뛰기' 링크를 제공한다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<body>\\r\\n    <h1>레진엔터테인먼트</h1>\\r\\n    <nav>...</nav>\\r\\n    <main>...</main>\\r\\n\\r\\n<!-- O -->\\r\\n<body>\\r\\n    <a href=\\\"#main\\\">본문으로 건너뛰기</a>\\r\\n    <h1>레진엔터테인먼트</h1>\\r\\n    <nav>...</nav>\\r\\n    <main id=\\\"main\\\">...</main>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 전맹 또는 상지 장애가 있는 사용자와 키보드를 선호하는 사용자의 탐색과 조작을 돕는다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [2.4.1 Bypass Blocks](https://www.w3.org/TR/WCAG21/#bypass-blocks){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 8. 모든 문서의 제목은 고유하고 식별할 수 있다. \\r\\n* 제목 콘텐츠를 문서마다 다르게 설명함으로써 현재 문서의 용도를 식별할 수 있다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<head>\\r\\n    <title>레진코믹스<title>\\r\\n\\r\\n<!-- O -->\\r\\n<head>\\r\\n    <title>준법시민(99회) - 레바툰 - 레진코믹스<title>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 전맹 사용자가 링크 이동 결과를 음성으로 확인할 수 있다.\\r\\n* 문서의 용도를 빠르게 파악할 수 있다.\\r\\n* 검색엔진이 올바른 페이지를 수집하도록 돕는다.\\r\\n* 유저 에이전트 탭의 식별 가능성이 높아진다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [2.4.2 Page Titled](https://www.w3.org/TR/WCAG21/#page-titled){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 9. 링크와 버튼 텍스트는 콘텐츠의 목적을 알 수 있다. \\r\\n* 주변 콘텐츠와 분리하여 독립적으로 접근해도 링크 또는 버튼의 목적을 알 수 있어야 한다.\\r\\n* 링크 또는 버튼에 독립적으로 접근하여 이해하기 어려운 경우 동일한 단락, 목록, 셀, 연결된 헤더셀(p, li, td, th)에 링크 또는 버튼의 목적을 설명해야 한다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<a href=\\\"#\\\" download>설치하기</a>\\r\\n<button type=\\\"button\\\">삭제하기</button>\\r\\n\\r\\n<!-- O -->\\r\\n<a href=\\\"#\\\" download>레진코믹스 안드로이드 애플리케이션 설치하기</a>\\r\\n<p>레진코믹스 안드로이드 애플리케이션 <a href=\\\"#\\\" download>설치하기</a></p>\\r\\n<li>레진코믹스 안드로이드 애플리케이션 <a href=\\\"#\\\" download>설치하기</a></li>\\r\\n<td>레진코믹스 안드로이드 애플리케이션 <a href=\\\"#\\\" download>설치하기</a></td>\\r\\n<tr>\\r\\n    <th scope=\\\"row\\\">레진코믹스 안드로이드 애플리케이션</th>\\r\\n    <td><a href=\\\"#\\\" download>설치하기</a></td>\\r\\n</tr>\\r\\n\\r\\n<!-- O -->\\r\\n<button type=\\\"button\\\">구매내역 삭제하기</button>\\r\\n<p>구매내역 <button type=\\\"button\\\">삭제하기</button></p>\\r\\n<li>구매내역 <button type=\\\"button\\\">삭제하기</button></li>\\r\\n<td>구매내역 <button type=\\\"button\\\">삭제하기</button></td>\\r\\n<tr>\\r\\n    <th scope=\\\"row\\\">구매내역</th>\\r\\n    <td><button type=\\\"button\\\">삭제하기</button></td>\\r\\n</tr>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 전맹 사용자가 링크 또는 버튼에 독립적으로 또는 순차적으로 접근하는 경우 링크 또는 버튼의 목적을 음성으로 전달할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [2.4.4 Link Purpose(In Context)](https://www.w3.org/TR/WCAG21/#link-purpose-in-context){:target=\\\"_blank\\\"}\\r\\n\\r\\n#### 평가 도구\\r\\n* [OpenWAX](https://chrome.google.com/webstore/detail/openwax/bfahpbmaknaeohgdklfbobogpdngngoe?hl=ko){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 10. 섹션에는 의미 있는 마크업과 헤딩이 있다.\\r\\n* 섹션 콘텐츠는 의미에 알맞은 article, section, nav, aside 요소로 마크업한다.\\r\\n* 섹션 콘텐츠에는 문서의 개요 체계에 알맞은 헤딩(h1~h6)을 제공한다.\\r\\n* 명시적 헤딩 기법을 사용한다. 명시적 헤딩 기법은 하나의 문서에 h1 요소를 한 번 사용한다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<div class=\\\"article\\\">...</div>\\r\\n<div class=\\\"section\\\">...</div>\\r\\n<div class=\\\"nav\\\">...</div>\\r\\n<div class=\\\"aside\\\">...</div>\\r\\n\\r\\n<!-- O -->\\r\\n<article>\\r\\n    <h2>...</h2>\\r\\n    ...\\r\\n</article>\\r\\n<section>\\r\\n    <h2>...</h2>\\r\\n    ...\\r\\n</section>\\r\\n<nav>\\r\\n    <h2>...</h2>\\r\\n    ...\\r\\n</nav>\\r\\n<aside>\\r\\n    <h2>...</h2>\\r\\n    ...\\r\\n</aside>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 보조기기 사용자가 원하는 탐색 지점으로 빠르게 건너 뛸 수 있다.\\r\\n* 검색엔진이 올바를 페이지를 수집하도록 돕는다.\\r\\n* 유저 에이전트 확장 기능 사용자에게 문서 개요를 전달할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [2.4.6 Headings and Labels](https://www.w3.org/TR/WCAG21/#headings-and-labels){:target=\\\"_blank\\\"}\\r\\n* [2.4.10 Section Headings](https://www.w3.org/TR/WCAG21/#section-headings){:target=\\\"_blank\\\"}\\r\\n\\r\\n#### 평가 도구\\r\\n* [HTML5 Outliner](https://chrome.google.com/webstore/detail/html5-outliner/afoibpobokebhgfnknfndkgemglggomo){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 11. 문서의 휴먼 랭귀지 속성을 제공한다.\\r\\n* html 요소에 lang 속성을 제공한다.\\r\\n* 한글, 영문, 일문, 중문에는 이를 식별하기 위한 [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes){:target=\\\"_blank\\\"} 코드값 ko, en, ja, zh가 있다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<html>\\r\\n\\r\\n<!-- O -->\\r\\n<html lang=\\\"ko\\\">\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 보조기기와 검색엔진이 문서의 휴먼 랭귀지를 식별할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [3.1.1 Language of Page](https://www.w3.org/TR/WCAG21/#language-of-page){:target=\\\"_blank\\\"}\\r\\n* [3.1.2 Language of Parts](https://www.w3.org/TR/WCAG21/#language-of-parts){:target=\\\"_blank\\\"}\\r\\n\\r\\n#### 평가 도구\\r\\n* [OpenWAX](https://chrome.google.com/webstore/detail/openwax/bfahpbmaknaeohgdklfbobogpdngngoe?hl=ko){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 12. 문맥 변경은 예측할 수 있다.\\r\\n* 사용자가 실행하기 전까지는 문서를 갱신(이동, 추가, 삭제, 재배치)하거나, 팝업(새 창, 레이어)을 띄우거나, 초점을 다른 곳으로 옮기지 않는다.\\r\\n* 사용자가 초점을 넣거나 마우스를 올리는 것은 기능을 실행하기 위한 의도로 보지 않기 때문에 문맥을 변경하면 안 된다.\\r\\n* '대한민국' 선택의 결과로 대한민국의 '시/군/구'를 선택하는 항목이 등장했다면 이것은 문맥의 변화가 아니다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n초점을 넣었을 뿐인데 자동으로 페이지 갱신 또는 이동.\\r\\n페이지 로드 시 자동 팝업.\\r\\n초점 자동 이동.\\r\\n\\r\\n<!-- O -->\\r\\n클릭 또는 리턴(엔터) 키를 통해 페이지 갱신 또는 이동.\\r\\n클릭 또는 리턴(엔터) 키를 통해 팝업 생성.\\r\\n초점을 자동으로 옮기지 않음.\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 보조 기기 사용자가 혼란에 빠지는 것을 예방할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [3.2.1 On Focus](https://www.w3.org/TR/WCAG21/#on-focus){:target=\\\"_blank\\\"}\\r\\n* [3.2.2 On Input](https://www.w3.org/TR/WCAG21/#on-input){:target=\\\"_blank\\\"}\\r\\n* [3.2.5 Change on Request](https://www.w3.org/TR/WCAG21/#change-on-request){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 13. 폼 콘트롤 요소에 설명을 제공한다. \\r\\n* 모든 input, textarea, select 요소에는 콘트롤을 설명하는 label 요소를 맵핑하거나 또는 title 속성을 제공한다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<form>\\r\\n    <input type=\\\"search\\\">\\r\\n    <button>검색</button>\\r\\n</form>\\r\\n\\r\\n<!-- O -->\\r\\n<form>\\r\\n    <label for=\\\"search\\\">검색</label>\\r\\n    <input id=\\\"search\\\" type=\\\"search\\\">\\r\\n    <button>검색</button>\\r\\n</form>\\r\\n\\r\\n<!-- O -->\\r\\n<form>\\r\\n    <input type=\\\"search\\\" title=\\\"검색\\\">\\r\\n    <button>검색</button>\\r\\n</form>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 보조기기가 폼 콘트롤에 독립적으로 접근했을 때 콘트롤에 대한 설명을 제공할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [2.4.6 Headings and Labels](https://www.w3.org/TR/WCAG21/#headings-and-labels){:target=\\\"_blank\\\"}\\r\\n* [3.3.2 Labels or Instructions](https://www.w3.org/TR/WCAG21/#labels-or-instructions){:target=\\\"_blank\\\"}\\r\\n\\r\\n#### 평가 도구\\r\\n* [OpenWAX](https://chrome.google.com/webstore/detail/openwax/bfahpbmaknaeohgdklfbobogpdngngoe?hl=ko){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 14. 실수를 예방하고 정정하는 것을 돕는다. \\r\\n* 입력 오류를 자동으로 감지할 수 있는 경우에만 이 지침을 적용한다. 예를 들면 이름을 잘못 입력하는 경우 정정 의견을 제시할 수 없다.\\r\\n* 오류 항목이 무엇인지 식별할 수 있도록 문자로 알리고 정정 의견을 제시한다. 예를 들면 \\\"생년월일 양식에 오류가 있습니다. 입력 형식은 yyyy-mm-dd 입니다.\\\"\\r\\n* 정정 의견은 보안을 유지하는 수준에서 제시한다. 예를 들면 \\\"아이디 또는 비밀번호 입력 오류.\\\"\\r\\n* 입력 내용을 전송하기 전 검토 후 교정할 수 있다. 또는 제출한 내용을 되돌릴 수 있다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n오류 입력 양식에 붉은 색 보더 처리. // 시각에 의존하고 있다. 문자로 알려야 한다.\\r\\n\\\"입력 양식에 오류가 있습니다.\\\" // 오류 식별 불가.\\r\\n\\\"로그인 오류. 비밀번호는 특수문자, 숫자, 알파벳을 하나 이상 포함해야 합니다.\\\" // 정정 의견이 보안을 해치고 있음.\\r\\n여러 단계(여러 페이지)에 걸쳐 작성한 내용 중 이전 단계의 내용을 검토할 수 없고 제출 후 수정할 수 없음. // 제출 전 또는 제출 후 수정할 수 있어야 한다.\\r\\n\\r\\n<!-- O -->\\r\\n\\\"생년월일 양식에 오류가 있습니다. 입력 형식은 yyyy-mm-dd 입니다.\\\" // 오류 식별 가능. 정정 의견 제시.\\r\\n\\\"아이디 또는 비밀번호 입력 오류. 5회 이상 오류 발생 시 계정잠금 상태로 전환합니다.\\\" // 오류 식별 가능. 정정 의견 제시. 보안을 해치지 않음.\\r\\n여러 단계(여러 페이지)에 걸쳐 작성한 내용 중 이전 단계의 내용을 검토 후 수정할 수 있음. 또는 이전 단계의 내용을 수정할 수 없지만 제출 후 수정할 수 있음.\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 사용자가 실수하지 않도록 예방하고 실수를 교정할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [3.3.1 Error Identification](https://www.w3.org/TR/WCAG21/#error-identification){:target=\\\"_blank\\\"}\\r\\n* [3.3.3 Error Suggestion](https://www.w3.org/TR/WCAG21/#error-suggestion){:target=\\\"_blank\\\"}\\r\\n* [3.3.4 Error Prevention (Legal, Financial, Data)](https://www.w3.org/TR/WCAG21/#error-prevention-legal-financial-data){:target=\\\"_blank\\\"}\\r\\n* [3.3.6 Error Prevention (All)](https://www.w3.org/TR/WCAG21/#error-prevention-all){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 15. HTML 문법을 준수한다.\\r\\n* 시작 태그에서 닫는(self-closing) 요소를 제외하고 시작 태그, 종료 태그, 따옴표를 생략하지 않는다.\\r\\n* 명세에 따라 중첩한다.\\r\\n* 속성을 중복 선언하지 않는다.\\r\\n* 모든 id 속성의 값은 하나의 문서 안에서 중복 없이 유일하다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<div><span>...</div> // span 종료 태그 생략 오류.\\r\\n<span><a><div>...</div></a></span> // span 요소가 div를 감싼 것은 오류.\\r\\n<div class=\\\"aaa\\\" class=\\\"bbb\\\">...</div> // 속성은 한 번만 선언해야 한다.\\r\\n<div id=\\\"xyz\\\">...</div><div id=\\\"xyz\\\">...</div> // xyz 값은 페이지에서 유일해야 한다.\\r\\n\\r\\n<!-- O -->\\r\\n<div><span>...</span></div>\\r\\n<div><a><div>...</div></a></div>\\r\\n<div class=\\\"aaa bbb\\\">...</div>\\r\\n<div id=\\\"abc\\\">...</div><div id=\\\"xyz\\\">...</div>\\r\\n```\\r\\n\\r\\n#### 기대 효과\\r\\n* 보조기기의 웹 문서 해석 오류를 예방할 수 있다.\\r\\n\\r\\n#### 관련 표준\\r\\n* [4.1.1 Parsing](https://www.w3.org/TR/WCAG21/#parsing){:target=\\\"_blank\\\"}\\r\\n\\r\\n#### 평가 도구\\r\\n* [W3C Markup Validation Service](https://validator.w3.org/){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n#### 관련 표준\\r\\n* [WCAG 2.1](https://www.w3.org/TR/WCAG21/){:target=\\\"_blank\\\"}\\r\\n* [HTML 5.2](https://www.w3.org/TR/html52/){:target=\\\"_blank\\\"}\\r\\n* [WAI-ARIA 1.1](https://www.w3.org/TR/wai-aria/){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n---\\r\\n\\r\\n\\r\\n\\r\\n<!--MIT License\\r\\n\\r\\nCopyright (c) 2017 레진엔터테인먼트\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\r\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\nin the Software without restriction, including without limitation the rights\\r\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\ncopies of the Software, and to permit persons to whom the Software is\\r\\nfurnished to do so, subject to the following conditions:\\r\\n\\r\\nThe above copyright notice and this permission notice shall be included in all\\r\\ncopies or substantial portions of the Software.\\r\\n\\r\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\nSOFTWARE.-->\";","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 posts\">\r\n                    <div class=\"lottie-banner\">\r\n                        <LottieLoader :lottieData=\"lottieJson\"/>\r\n                    </div>\r\n                    <!--\r\n                        MIT License\r\n\r\n                        Copyright (c) 2017 레진엔터테인먼트\r\n\r\n                        Permission is hereby granted, free of charge, to any person obtaining a copy\r\n                        of this software and associated documentation files (the \"Software\"), to deal\r\n                        in the Software without restriction, including without limitation the rights\r\n                        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n                        copies of the Software, and to permit persons to whom the Software is\r\n                        furnished to do so, subject to the following conditions:\r\n\r\n                        The above copyright notice and this permission notice shall be included in all\r\n                        copies or substantial portions of the Software.\r\n\r\n                        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n                        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n                        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n                        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n                        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n                        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n                        SOFTWARE.\r\n                    -->\r\n                    <PageMarkDown :loader=\"postMd\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport PageMarkDown from '@/components/PageMarkDown.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieRul.json'\r\nimport postMd from '@/posts/rul/웹접근성가이드.md' \r\n\r\n\r\nconst title = ref('웹 접근성 가이드')\r\nconst pageClass = ref(['rul', 'RuleAlly'])\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./RuleAlly.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RuleAlly.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default \"---\\r\\ntitle: WAI-ARIA 가이드 안내\\r\\ndate: 2024.06\\r\\n---\\r\\n\\r\\n\\r\\n> 본 문서는 [레진 WAI-ARIA 가이드라인](https://github.com/lezhin/accessibility/blob/master/aria/README.md){:target=\\\"_blank\\\"} 을 기반으로 작성되었습니다.<br>해당 내용은 MIT License 조건 하에 제공됩니다.\\r\\n{:class=\\\"prompt-info\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## WAI-ARIA 개요\\r\\n\\r\\n\\r\\n[WAI-ARIA](https://www.w3.org/TR/wai-aria-1.1/){:target=\\\"_blank\\\"} 는 HTML의 접근성 문제를 보완하는 W3C 명세입니다. \\r\\nWAI-ARIA는 HTML 요소에 `role` 또는 `aria-*` 속성을 추가하여 콘텐츠의 '역할(roles), 상태(states), 속성(properties)' 정보를 보조기기에 제공합니다.\\r\\n\\r\\nWAI-ARIA 속성을 모든 HTML 요소에 무분별하게 사용할 수 있는 것은 아닙니다. \\r\\n`role` 또는 `aria-*` 속성을 특정 HTML 요소에 사용할 수 있는지 [ARIA in HTML](https://www.w3.org/TR/html-aria/){:target=\\\"_blank\\\"} 명세를 검토하면서 적용해야 합니다.\\r\\n<br>\\r\\n\\r\\n* **사례 참고 사이트**\\r\\n    * 주요 UI별 ARIA 적용 사례 : https://aoa.gitbook.io/skymimo/aoa-2022-2023/ui-aria-2022{:target=\\\"_blank\\\"}\\r\\n\\r\\n* **관련 문서**\\r\\n    * [WAI-ARIA 1.1](https://www.w3.org/TR/wai-aria/){:target=\\\"_blank\\\"}\\r\\n    * [Using ARIA](https://www.w3.org/TR/using-aria/){:target=\\\"_blank\\\"}\\r\\n    * [ARIA in HTML](https://www.w3.org/TR/html-aria/){:target=\\\"_blank\\\"}\\r\\n    * [WAI-ARIA Authoring Practices 1.1](https://www.w3.org/TR/wai-aria-practices/){:target=\\\"_blank\\\"}\\r\\n    * [ARIA Landmarks Example](https://www.w3.org/TR/wai-aria-practices/examples/landmarks/){:target=\\\"_blank\\\"}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 1. HTML을 의미 있게 작성한다. \\r\\n대부분의 WAI-ARIA 명세는 HTML 요소와 속성을 흉내 내는 것입니다. 올바른 HTML을 사용한다면 WAI-ARIA 사용을 최소화할 수 있습니다. WAI-ARIA를 사용하기에 앞서 HTML을 의미 있게 사용했는지 충분히 검토합니다.\\r\\n\\r\\n```html\\r\\n<!-- X -->\\r\\n<a href=\\\"#\\\" role=\\\"button\\\">...</a>\\r\\n\\r\\n<!-- O -->\\r\\n<button type=\\\"button\\\">...</button>\\r\\n```\\r\\n보조기기는 두 가지 예제를 모두 '버튼'으로 간주할 것입니다. 그러나 첫 번째 예제의 경우 브라우저는 문맥 메뉴를 통해 링크와 관련된 기능(새 탭에서 링크 열기, 링크 주소 복사 등)을 제공하게 되고 사용자를 혼란스럽게 합니다. 또한, 첫 번째 예제에서 '버튼'이라는 설명을 들은 보조기기 사용자는 '스페이스' 키를 눌러 버튼 기능을 사용하려고 시도할 수 있습니다. 하지만 `a` 요소는 '엔터' 키만으로 실행할 수 있습니다. `button` 요소는 '엔터' 키와 '스페이스' 키로 실행할 수 있기 때문에 `a` 요소로부터 '버튼'이라는 설명을 들은 보조기기 사용자를 혼란스럽게 합니다. 결국 올바른 HTML의 선택은 사용자 경험과 접근성 측면에서 모두 중요합니다.\\r\\n\\r\\n\\r\\n\\r\\n## 2. 탭에 대한 내용(role=\\\"tab\\\")\\r\\n\\r\\n탭은 스타일을 의미하는 것이 아니라 현재 페이지 내용에 색인을 제공하는 구조(tablist, tab, tabpanel)를 의미합니다. 사이트 탐색 도구에 해당하는 요소는 `nav > h2 + ul` 또는 `aside > h2 + ul` 구조로 마크업 합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 앵커 형식 탭 -->\\r\\n<div class=\\\"weekly\\\">\\r\\n    <div role=\\\"tablist\\\">\\r\\n        <a id=\\\"mon-anchor\\\" href=\\\"#mon\\\" role=\\\"tab\\\" aria-selected=\\\"true\\\">월</a>\\r\\n        <a id=\\\"tue-anchor\\\" href=\\\"#tue\\\" role=\\\"tab\\\" aria-selected=\\\"false\\\">화</a>\\r\\n    </div>\\r\\n    <div id=\\\"mon\\\" tabindex=\\\"0\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"mon-anchor\\\">\\r\\n        월요일엔 빨간 장미를...\\r\\n    </div>\\r\\n    <div id=\\\"tue\\\" tabindex=\\\"0\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"tue-anchor\\\" hidden>\\r\\n        화요일엔 노란 장미를...\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- O: 버튼 형식 탭 -->\\r\\n<div class=\\\"weekly\\\">\\r\\n    <div role=\\\"tablist\\\">\\r\\n        <button type=\\\"button\\\" id=\\\"mon-anchor\\\" aria-controls=\\\"mon\\\" role=\\\"tab\\\" aria-selected=\\\"true\\\">월</button>\\r\\n        <button type=\\\"button\\\" id=\\\"tue-anchor\\\" aria-controls=\\\"tue\\\" role=\\\"tab\\\" aria-selected=\\\"false\\\">화</button>\\r\\n    </div>\\r\\n    <div id=\\\"mon\\\" tabindex=\\\"0\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"mon-anchor\\\">\\r\\n        월요일엔 빨간 장미를...\\r\\n    </div>\\r\\n    <div id=\\\"tue\\\" tabindex=\\\"0\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"tue-anchor\\\" hidden>\\r\\n        화요일엔 노란 장미를...\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n`role` 속성은 값에 따라 적용할 수 있는 HTML 요소가 제한되어 있습니다. 예를 들면 `role=\\\"tabpanel\\\"` 속성은 `<ul>`요소에 사용할 수 없으므로 적용 시 HTML5 요소 명세를 확인해야 합니다.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 3. 툴팁(role=\\\"tooltip\\\")\\r\\n\\r\\n툴팁은 앵커 또는 폼 콘트롤 요소에 대한 참고용 콘텐츠입니다. 보통 마우스 오버 또는 키보드 초점을 받으면 표시하는 내용이지만 화면에 항상 표시할 수도 있습니다. 툴팁 요소에 `role=\\\"tooltip\\\"` 속성으로 명시할 수 있습니다. 툴팁을 유발하는 앵커 또는 콘트롤에 `aria-describedby=\\\"ID reference list\\\"` 속성을 명시하여 연결합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 인풋 툴팁 -->\\r\\n<label for=\\\"tel\\\">전화번호</label>\\r\\n<input id=\\\"tel\\\" type=\\\"tel\\\" aria-describedby=\\\"TIP-TEL\\\">\\r\\n<p id=\\\"TIP-TEL\\\" role=\\\"tooltip\\\" hidden>하이픈(-) 없이 숫자만 입력.</p>\\r\\n\\r\\n<!-- O: 버튼 툴팁 -->\\r\\n<button aria-describedby=\\\"TIP-DEL\\\">게시물 삭제</button>\\r\\n<p id=\\\"TIP-DEL\\\" role=\\\"tooltip\\\" hidden>게시물 삭제 후 복원할 수 없음.</p>\\r\\n```\\r\\n\\r\\n`role=\\\"alert\\\"` 또는 `role=\\\"alertdialog\\\"` 또는 `role=\\\"dialog\\\"` 콘텐츠와 혼동하지 않도록 유의합니다.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 4. 성공(결과) 메시지(role=\\\"status\\\")\\r\\n\\r\\n성공(또는 결과) 상태 메시지를 사용자에게 전달하는 콘텐츠입니다. 사용자의 현재 작업을 방해하지 않고(초점을 옮기지 않고) 보조기기 사용자에게 조언할만한 메시지를 전달하는 것을 의도하고 있습니다. `role=\\\"alert\\\"` 만큼 중요하지 않습니다.\\r\\n\\r\\n성공 `role=\\\"status\\\"` 메시지는 초점을 받지 않도록 처리해야 합니다. `role=\\\"status\\\"` 요소는 `aria-live=\\\"polite\\\"` 속성과 `aria-atomic=\\\"true\\\"` 속성을 암시적으로 할당하기 때문에 추가로 선언할 필요가 없습니다. 성공 메시지 영역을 변경하면 화면 낭독기는 현재 진행 중인 음성 안내를 마친 후 성공 메시지 전체 내용을 사용자에게 전달합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 성공 메시지 -->\\r\\n<p role=\\\"status\\\">회원가입 양식 전송완료.</p>\\r\\n\\r\\n<!-- O: 결과 메시지 -->\\r\\n<p role=\\\"status\\\">10개의 검색 결과.</p>\\r\\n<p role=\\\"status\\\">장바구니에 5개의 항목.</p>\\r\\n```\\r\\n\\r\\n초점을 받을 수 있는 사용자 인터렉션 요소를 포함하고 있다면 알럿 대화상자 `role=\\\"alertdialog\\\"` 또는 대화상자 `role=\\\"dialog\\\"`를 사용합니다.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 5. 오류(제안) 메시지(role=\\\"alert\\\")\\r\\n\\r\\n시간에 민감하고 중요한(오류, 제안) 메시지를 사용자에게 전달하는 콘텐츠입니다. 사용자의 현재 작업을 방해하지 않고(초점을 옮기지 않고) 보조기기 사용자에게 즉각 메시지를 전달하는 것을 의도하고 있습니다.\\r\\n\\r\\n오류 `role=\\\"alert\\\"` 메시지는 초점을 받지 않도록 처리해야 합니다. `role=\\\"alert\\\"` 요소는 `aria-live=\\\"assertive\\\"` 속성과 `aria-atomic=\\\"true\\\"` 속성을 암시적으로 할당하기 때문에 추가로 선언할 필요가 없습니다. 오류 메시지 영역을 변경하면 화면 낭독기는 현재 진행 중인 음성 안내를 즉시 멈추고 오류 메시지 전체 내용을 사용자에게 전달합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 오류 메시지 -->\\r\\n<p role=\\\"alert\\\">우편번호 입력 오류.</p>\\r\\n\\r\\n<!-- O: 제안 메시지 -->\\r\\n<p role=\\\"alert\\\">로그인 후 이용 가능.</p>\\r\\n```\\r\\n\\r\\n초점을 받을 수 있는 사용자 인터렉션 요소를 포함하고 있다면 알럿 대화상자 `role=\\\"alertdialog\\\"` 또는 대화상자 `role=\\\"dialog\\\"`를 사용합니다.\\r\\n\\r\\n사용자 입력 콘트롤(`input`, `textaria`)의 실시간 오류를 표시하는 경우라면 오류 메시지 대신 콘트롤 요소에 `aria-invalid=\\\"true | false\\\"` 속성과 `aria-errormessage=\\\"ID reference\\\"` 속성을 사용합니다.\\r\\n\\r\\n\\r\\n## 6. 알럿 대화상자(role=\\\"alertdialog\\\")\\r\\n\\r\\n사용자 동의 또는 확인이 필요한 인터렉션 요소(`input`, `button`)를 포함한 상태로 다른 과업을 차단하는 경우 알럿 대화상자 `role=\\\"alertdialog\\\"`를 사용합니다. 사용자 입력 없이 '확인, 취소' 버튼을 제공하는 경우에 적절합니다.\\r\\n\\r\\n 알럿 대화상자에는 `aria-labelledby=\\\"ID reference list\\\"` 그리고 `aria-describedby=\\\"ID reference list\\\"` 속성으로 알럿 대화상자의 제목과 설명을 연결합니다.\\r\\n\\r\\n 알럿 대화상자는 다른 과업을 차단해야 하기 때문에 모달 윈도우 스타일로 처리한 다음 `aria-modal=\\\"true\\\"` 속성을 추가합니다.\\r\\n\\r\\n 알럿 대화상자를 표시할 때 키보드 초점을 대화상자 내부 첫 번째 콘트롤(예를 들면 '확인' 버튼 또는 '인풋')으로 옮겨야 합니다. 알럿 대화상자를 표시하는 동안 초점은 대화상자 안에서 벗어나지 않아야 합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 알럿 대화상자 -->\\r\\n<div role=\\\"alertdialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"TITLE\\\" aria-describedby=\\\"DESCRIPTION\\\">\\r\\n    <h2 id=\\\"TITLE\\\">레진패스 안내</h2>\\r\\n    <p id=\\\"DESCRIPTION\\\">이 작품의 유료 에피소드 열람 시 자동으로 구매합니다. 레진패스를 적용하시겠습니까?</p>\\r\\n    <button type=\\\"button\\\">레진패스 적용</button>\\r\\n    <button type=\\\"button\\\">취소</button>\\r\\n</div>\\r\\n```\\r\\n\\r\\n사용자가 응답할 필요 없는 내용이라면 `role=\\\"alert\\\"` 속성이 적절합니다. 사용자가 하위창 맥락으로 벗어나 정보를 입력(`input`, `textarea`, `select`, `button`)하는 경우라면 대화상자 `role=\\\"dialog\\\"`가 적절합니다.\\r\\n\\r\\n\\r\\n\\r\\n## 7. 대화상자(role=\\\"dialog\\\")\\r\\n\\r\\n대화상자 `role=\\\"dialog\\\"`는 사용자 인터렉션이 필요한 현재 문서의 하위창(마치 윈도우 팝업)입니다. 사용자가 정보를 입력하거나 응답하도록 하는 내용(`input`, `textarea`, `select`, `button`)을 반드시 포함합니다.\\r\\n\\r\\n대화상자에는 `aria-labelledby=\\\"ID reference list\\\"` 또는 `aria-label=\\\"string\\\"` 속성으로 설명을 제공합니다.\\r\\n\\r\\n대화상자를 표시할 때 키보드 초점을 대화상자 내부 첫 번째 콘트롤으로 옮겨야 합니다. 대화상자를 표시하는 동안 초점은 대화상자 안에서 벗어나지 않아야 합니다.\\r\\n\\r\\n모달 스타일로 표시할 것인지 여부는 선택 사항입니다. 모달 스타일로 처리하는 경우 `aria-modal=\\\"true\\\"` 속성을 추가합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 대화상자 -->\\r\\n<section role=\\\"dialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"TITLE\\\">\\r\\n    <h2 id=\\\"TITLE\\\">로그인</h2>\\r\\n    <form>\\r\\n        <label for=\\\"ID\\\">아이디</label>\\r\\n        <input id=\\\"ID\\\">\\r\\n        <label for=\\\"PW\\\">비밀번호</label>\\r\\n        <input id=\\\"PW\\\" type=\\\"password\\\">\\r\\n        <button>로그인</button>\\r\\n    </form>\\r\\n</section>\\r\\n```\\r\\n\\r\\n사용자의 다른 과업을 차단하면서 '확인, 취소' 버튼만 제공하는 경우라면 `role=\\\"alertdialog\\\"` 속성이 적절합니다. 사용자가 응답할 필요 없는 내용이라면 `role=\\\"alert\\\"` 속성이 적절합니다.\\r\\n\\r\\n대중적인 브라우저가 `<dialog>` 요소를 충분히 지원하면 `role=\\\"dialog\\\"` 속성 대신 `<dialog>` 요소를 사용합니다.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 8. 탐색(role=\\\"navigation\\\")\\r\\n\\r\\n탐색은 현재 페이지 또는 연결된 페이지를 탐색하는 주요 탐색 블록(보통 링크 집합)입니다. 문서의 '주요 내용'을 탐색하는 경우에 사용하면 적절합니다. 모든 링크 집합이 탐색 블록은 아닙니다.\\r\\n\\r\\n탐색 블록에 적절한 HTML 요소는 `<nav>` 요소입니다. `role=\\\"navigation\\\"` 속성을 사용하기 전에 `<nav>` 요소를 먼저 고려합니다.\\r\\n\\r\\n탐색 역할을 하는 요소(`<nav>`, `role=\\\"navigation\\\")가 문서 안에서 유일한 경우 레이블(`aria-labelledby`, `aria-label`) 제공은 선택입니다. 그러나 탐색 역할을 하는 요소가 둘 이상인 경우 고유한 레이블을 제공해야 합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 탐색에 nav 요소를 권장 -->\\r\\n<nav>\\r\\n    <h2>글로벌 네비게이션</h2>\\r\\n    ...\\r\\n</nav>\\r\\n\\r\\n<!-- O: 탐색 역할을 하는 요소가 유일한 경우 레이블 생략 가능 -->\\r\\n<div role=\\\"navigation\\\">\\r\\n    <h2>글로벌 네비게이션</h2>\\r\\n    ...\\r\\n</div>\\r\\n\\r\\n<!-- O: 탐색 역할이 둘 이상인 경우 레이블 제공(nav) -->\\r\\n<nav aria-labelledby=\\\"global-navigation\\\">\\r\\n    <h2 id=\\\"global-navigation\\\">글로벌 네비게이션</h2>\\r\\n    ...\\r\\n</nav>\\r\\n<nav aria-labelledby=\\\"notice-pagination\\\">\\r\\n    <h3 id=\\\"notice-pagination\\\">공지사항 페이지네이션</h3>\\r\\n    ...\\r\\n</nav>\\r\\n\\r\\n<!-- O: 탐색 역할이 둘 이상인 경우 레이블 제공(role=\\\"navigation\\\") -->\\r\\n<div role=\\\"navigation\\\" aria-labelledby=\\\"global-navigation\\\">\\r\\n    <h2 id=\\\"global-navigation\\\">글로벌 네비게이션</h2>\\r\\n    ...\\r\\n</div>\\r\\n<div role=\\\"navigation\\\" aria-labelledby=\\\"notice-pagination\\\">\\r\\n    <h3 id=\\\"notice-pagination\\\">공지사항 페이지네이션</h3>\\r\\n    ...\\r\\n</div>\\r\\n```\\r\\n\\r\\n`<nav>` 요소는 섹셔닝 콘텐츠이기 때문에 문서 개요(outline)를 생성합니다. 제목 없는 개요를 만들지 않기 위해 헤딩을 제공합니다. 레이블 요소(예를 들면 헤딩)가 있는 경우 `aria-labelledby` 속성으로 연결합니다. 레이블 요소(예를 들면 헤딩)가 없는 경우 `aria-label` 속성을 사용합니다.\\r\\n\\r\\n\\r\\n\\r\\n## 9. 보충(role=\\\"complementary\\\")\\r\\n\\r\\n보충은 주요 내용을 보완하는 블록입니다. 문서의 '주요 내용'이 아닙니다. 보충을 제거해도 주요 내용에 변함이 없어야 합니다. 주요 내용에서 보충을 분리한 경우에도 보충은 나름의 의미가 있습니다.\\r\\n\\r\\n보충으로 적절한 HTML 요소는 `<aside>` 요소입니다. `role=\\\"complementary\\\"` 속성을 사용하기 전에 `<aside>` 요소를 먼저 고려합니다.\\r\\n\\r\\n보충 역할을 하는 요소(`<aside>`, `role=\\\"complementary\\\")가 문서 안에서 유일한 경우 레이블(`aria-labelledby`, `aria-label`) 제공은 선택입니다. 그러나 보충 역할을 하는 요소가 둘 이상인 경우 고유한 레이블을 제공해야 합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 보충에 aside 요소를 권장 -->\\r\\n<aside>\\r\\n    <h2>배너/광고</h2>\\r\\n    ...\\r\\n</aside>\\r\\n\\r\\n<!-- O: 보충 역할을 하는 요소가 유일한 경우 레이블 생략 가능 -->\\r\\n<div role=\\\"complementary\\\">\\r\\n    <h2>배너/광고</h2>\\r\\n    ...\\r\\n</div>\\r\\n\\r\\n<!-- O: 보충 역할이 둘 이상인 경우 레이블 제공(aside) -->\\r\\n<aside aria-labelledby=\\\"event\\\">\\r\\n    <h2 id=\\\"event\\\">이벤트</h2>\\r\\n    ...\\r\\n</aside>\\r\\n<aside aria-labelledby=\\\"advertisement\\\">\\r\\n    <h2 id=\\\"advertisement\\\">배너/광고</h2>\\r\\n    ...\\r\\n</aside>\\r\\n\\r\\n<!-- O: 보충 역할이 둘 이상인 경우 레이블 제공(role=\\\"complementary\\\") -->\\r\\n<div role=\\\"complementary\\\" aria-labelledby=\\\"event\\\">\\r\\n    <h2 id=\\\"event\\\">이벤트</h2>\\r\\n    ...\\r\\n</div>\\r\\n<div role=\\\"complementary\\\" aria-labelledby=\\\"advertisement\\\">\\r\\n    <h2 id=\\\"advertisement\\\">배너/광고</h2>\\r\\n    ...\\r\\n</div>\\r\\n```\\r\\n\\r\\n`<aside>` 요소는 섹셔닝 콘텐츠이기 때문에 문서 개요(outline)를 생성합니다. 제목 없는 개요를 만들지 않기 위해 헤딩을 제공합니다. 레이블 요소(예를 들면 헤딩)가 있는 경우 `aria-labelledby` 속성으로 연결합니다. 레이블 요소(예를 들면 헤딩)가 없는 경우 `aria-label` 속성을 사용합니다.\\r\\n\\r\\n\\r\\n## 10. 의미 없음(role=\\\"none\\\")\\r\\n\\r\\n의미 없음(role=\\\"none\\\")을 선언하는 경우 보조기기는 마크업의 의미를 제거 후 내용만 사용자에게 전달합니다. `role=\\\"none\\\"` 속성은 `role=\\\"presentation\\\"`과 동일하며 `role=\\\"presentation\\\"`을 대체합니다.\\r\\n\\r\\nHTML을 의미에 맞지 않게 마크업한 경우, 또는 스타일링에 필요한 마크업을 추가한 경우 `role=\\\"none\\\"` 속성을 사용할 수 있습니다. 의미에 맞지 않는 마크업과 스타일을 위한 마크업을 권장하지 않기 때문에 이 속성은 절제해야 합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: tablist와 tab 사이 li 요소의 의미 제거 -->\\r\\n<ul role=\\\"tablist\\\">\\r\\n    <li role=\\\"none\\\">\\r\\n        <a href=\\\"#home\\\" role=\\\"tab\\\" aria-selected=\\\"true\\\">홈</a>\\r\\n    </li>\\r\\n    <li role=\\\"none\\\">\\r\\n        <a href=\\\"#ongoing\\\" role=\\\"tab\\\" aria-selected=\\\"false\\\">연재</a>\\r\\n    </li>\\r\\n    <li role=\\\"none\\\">\\r\\n        <a href=\\\"#ranking\\\" role=\\\"tab\\\" aria-selected=\\\"false\\\">랭킹</a>\\r\\n    </li>\\r\\n</ul>\\r\\n```\\r\\n\\r\\n의미 없음(role=\\\"none\\\")은 숨김(`hidden`, `aria-hidden=\\\"true\\\") 속성과 다릅니다. 숨김 속성은 요소와 내용을 모두 감추어 버리지만 `role=\\\"none\\\"` 속성은 내용을 드러내고 의미만 감춥니다.\\r\\n\\r\\n\\r\\n\\r\\n## 11. 현재 상태(`aria-current=\\\"token\\\")\\r\\n\\r\\n`aria-current` 속성은 현재 맥락과 일치하는 항목을 의미합니다. `token` 값은 정해진 값 중 하나만 사용할 수 있음을 의미합니다. 예를 들면 `aria-current` 속성의 `token` 값은 `page | step | location | date | time | true | false(default)` 으로 정해져 있고 이 중 하나만 사용할 수 있습니다.\\r\\n\\r\\n* `page`: 현재 '페이지'와 일치하는 시각적으로 강조한 링크.\\r\\n* `step`: 현재 '단계'와 일치하는 시각적으로 강조한 링크.\\r\\n* `location`: 플로우 차트에서 현재 '위치'와 일치하는 시각적으로 강조한 이미지.\\r\\n* `date`: 달력에서 현재 '날짜'와 일치하는 날짜.\\r\\n* `time`: 시간표에서 현재 '시간'과 일치하는 시간.\\r\\n\\r\\n이 밖에 `true`와 `false` 값도 있습니다. `true` 또는 `false` 값은 구체적으로 어떤 맥락(페이지, 단계, 위치, 날짜, 시간)과 일치하는지 정보를 전달하지 않기 때문에 `page | step | location | date | time` 토큰이 적절하지 않은 맥락에 한하여 사용합니다.\\r\\n\\r\\n* `true`: 항목이 세트 내 현재 맥락과 일치함.\\r\\n* `false(default)`: 항목이 세트 내 현재 맥락과 일치하지 않음. 속성 또는 값을 선언하지 않은 경우 초기값.\\r\\n\\r\\n```html\\r\\n<!-- O: aria-current=\\\"page\\\" 현재 페이지 강조 링크 -->\\r\\n<nav>\\r\\n    <h2>글로벌 네비게이션</h2>\\r\\n    <ul>\\r\\n        <li><a href=\\\"/home\\\" aria-current=\\\"page\\\">홈</a></li>\\r\\n        <li><a href=\\\"/ongoing\\\">연재</a></li>\\r\\n        <li><a href=\\\"/ranking\\\">랭킹</a></li>\\r\\n    </ul>\\r\\n</nav>\\r\\n\\r\\n<!-- O: aria-current=\\\"step\\\" 현재 단계 강조 링크 -->\\r\\n<nav>\\r\\n    <h2>회원 가입</h2>\\r\\n    <ol>\\r\\n        <li><a href=\\\"/accept-terms\\\" aria-current=\\\"step\\\">약관 동의</a></li>\\r\\n        <li><a href=\\\"/id-password\\\">아이디/비밀번호 생성</a></li>\\r\\n        <li><a href=\\\"/email-authentication\\\">이메일 인증</a></li>\\r\\n    </ol>\\r\\n</nav>\\r\\n\\r\\n<!-- O: aria-current=\\\"location\\\" 현재 위치 강조 이미지 -->\\r\\n<img src=\\\"is-payment-success.png\\\" alt=\\\"결제 성공?\\\" aria-current=\\\"location\\\">\\r\\n<img src=\\\"payment-info.png\\\" alt=\\\"결제 내역 안내\\\">\\r\\n<img src=\\\"payment-fail.png\\\" alt=\\\"결제 실패 안내\\\">\\r\\n\\r\\n<!-- O: aria-current=\\\"date\\\" 현재 날짜 강조 -->\\r\\n<td aria-curent=\\\"date\\\">12/24(토)</td>\\r\\n<td>\\r\\n    <button type=\\\"button\\\" aria-curent=\\\"date\\\">12/24(토)</button>\\r\\n</td>\\r\\n\\r\\n<!-- O: aria-current=\\\"time\\\" 현재 시간 강조 -->\\r\\n<th scope=\\\"row\\\" aria-current=\\\"time\\\">18:00 ~ 20:00</th>\\r\\n<td>무한 도전</td>\\r\\n```\\r\\n\\r\\n`aria-current` 속성은 `aria-selected` 속성과 다른 의미로 사용하기 때문에 `tablist` 목록 안에서 `aria-selected` 속성을 대체하는 용도로 사용하면 안 됩니다. 그러나 `aria-current` 속성과 `aria-selected` 속성을 함께 선언할 수도 있습니다. 예를 들면 편집 가능한 트리 형식의 목록에서 현재 페이지 항목과 편집을 위해 선택한 항목이 일치하는 경우 함께 선언할 수 있습니다.\\r\\n\\r\\n\\r\\n\\r\\n## 12. 선택 상태(aria-selected)\\r\\n\\r\\n`aria-selected` 속성은 단일 또는 다중 선택이 가능한 요소(role=\\\"gridcell | option | row | tab\\\")에 한하여 선택 상태를 명시하는 용도로 사용합니다. `role=\\\"tab\\\"` 요소에 가장 흔히 사용합니다. 키보드 초점을 받을 수 있는 요소에 적용해야 합니다.\\r\\n\\r\\n* `undefined(default)`: 속성 또는 값을 선언하지 않은 경우 초기값. 선택할 수 없음.\\r\\n* `true`: 선택 가능한 요소를 선택했음.\\r\\n* `false`: 선택 가능한 요소를 선택하지 않았음.\\r\\n\\r\\n선택 요소에만 `aria-selected=\\\"true\\\"` 속성을 적용하면 `aria-selected` 속성을 적용하지 않은 요소는 `aria-selected=\\\"undefined\\\"` 상태(선택할 수 없음)가 됩니다. 따라서 선택하지 않은 요소에는 명시적으로 `aria-selected=\\\"false\\\"` 속성과 값을 적용합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: role=\\\"tab\\\" 요소에 선택 상태를 명시 -->\\r\\n<div role=\\\"tablist\\\">\\r\\n    <a id=\\\"mon-anchor\\\" href=\\\"#mon\\\" role=\\\"tab\\\" aria-selected=\\\"true\\\">월</a>\\r\\n    <a id=\\\"tue-anchor\\\" href=\\\"#tue\\\" role=\\\"tab\\\" aria-selected=\\\"false\\\">화</a>\\r\\n</div>\\r\\n```\\r\\n\\r\\n`aria-selected` 속성은 `aria-current` 속성과 다른 의미로 사용하기 때문에 혼동하지 않도록 유의합니다. `aria-selected` 속성은 선택 가능한 요소에, `aria-current` 속성은 현재 맥락과 일치하는 요소에 사용합니다. `aria-selected` 속성은 단일 또는 다중 선택이 가능한 요소(role=\\\"gridcell | option | row | tab\\\")에 제한적으로 사용할 수 있습니다. 예를 들면 페이지네이션에서 현재 페이지와 일치하는 링크에는 `aria-selected` 속성이 적절하지 않고 `aria-current` 속성이 적절합니다.\\r\\n\\r\\n\\r\\n\\r\\n## 13. 팝업 상태(aria-haspopup)\\r\\n\\r\\n`aria-haspopup` 속성은 요소에 연결되어 있는 팝업(메뉴, 대화상자 등) 정보를 제공합니다. 팝업은 다른 내용 위에 표시하는 블럭을 의미합니다. 팝업 유형은 `menu`, `listbox`, `tree`, `grid`, `dialog` 으로 제한되어 있기 때문에 의미가 정확하게 일치하는 경우에만 사용해야 합니다. 일반적으로 `menu`와 `dialog` 유형이 빈번하므로 많이 사용할 것입니다.\\r\\n\\r\\n* `true`: `menu`와 동일한 의미.\\r\\n* `menu`: `menu(role)` 팝업이 연결됨. `menu(role)`는 링크 목록.\\r\\n* `dialog`: `dialog(role)` 팝업이 연결됨. `dialog(role)`는 상호작용 요소(버튼 또는 콘트롤)가 포함된 현재 문서의 하위창.\\r\\n* `listbox`: `listbox(role)` 팝업이 연결됨. `listbox(role)`는 선택 가능한 `option(role)`을 포함한 콤보박스.\\r\\n* `tree`: `tree(role)` 팝업이 연결됨. `tree(role)`는 하위 `list(role)`을 포함하며 접고 펼칠 수 있음.\\r\\n* `grid`: `grid(role)` 팝업이 연결됨. `grid(role)`는 행과 열로 구성된 선택 가능한 위젯. 상호작용 가능한 셀이기 때문에 `table(role)`과는 역할이 다름에 유의.\\r\\n* `false(default)`: 연결된 팝업이 없음을 의미.\\r\\n\\r\\n```html\\r\\n<!-- O: aria-haspopup=\\\"menu | true\\\" -->\\r\\n<button type=\\\"button\\\" id=\\\"menu-button\\\" aria-haspopup=\\\"menu\\\" aria-controls=\\\"menu-list\\\" aria-expanded=\\\"false\\\">메뉴</button>\\r\\n<ul id=\\\"menu-list\\\" role=\\\"menu\\\" aria-labelledby=\\\"menu-button\\\" hidden>\\r\\n    <li>\\r\\n        <a href=\\\"/completed\\\">완결</a>\\r\\n    </li>\\r\\n    <li>\\r\\n        <a href=\\\"/printed\\\">단행본</a>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n<!-- O: aria-haspopup=\\\"dialog\\\"-->\\r\\n<a href=\\\"#login-dialog\\\" aria-haspopup=\\\"dialog\\\">로그인</a>\\r\\n<section id=\\\"login-dialog\\\" role=\\\"dialog\\\" aria-labelledby=\\\"login-heading\\\" aria-modal=\\\"true\\\" hidden>\\r\\n    <h2 id=\\\"login-heading\\\">로그인</h2>\\r\\n    <form>\\r\\n        <label for=\\\"id-input\\\">아이디</label>\\r\\n        <input id=\\\"id-input\\\" type=\\\"text\\\">\\r\\n        <label for=\\\"pw-input\\\">비밀번호</label>\\r\\n        <input id=\\\"pw-input\\\" type=\\\"password\\\">\\r\\n        <button type=\\\"submit\\\">로그인</button>\\r\\n    </form>\\r\\n</section>\\r\\n```\\r\\n\\r\\n연결한 팝업 `role`이 암시적인 경우에도 `aria-haspopup` 속성을 연결할 수 있습니다. 예를 들어 연결된 팝업이 `<dialog>` 요소라면 암시적으로 `role=\\\"dialog\\\"` 속성을 지닌 것이므로 `aria-haspopup=\\\"dailog\\\"` 속성을 사용할 수 있습니다. 대중적인 브라우저가 `<dialog>` 요소를 충분히 지원하면 `role=\\\"dialog\\\"` 속성 대신 `<dialog>` 요소를 사용합니다.\\r\\n\\r\\n\\r\\n\\r\\n## 14. 확장 상태(aria-expanded)\\r\\n\\r\\n`aria-expanded` 속성은 제어 대상의 확장 또는 축소 상태를 나타냅니다. 어코디언, 메뉴, 콤보박스, 트리와 같이 하위 그룹(또는 독립적인) 내용을 토글(열기, 닫기)하는 경우에 사용하면 적절합니다. 독립적인 내용을 제어할 때 `aria-controls` 속성을 이용하여 제어 대상을 명시해야 합니다.\\r\\n\\r\\n* `undefined(default)`: 속성 또는 값을 선언하지 않은 경우 초기값. 제어 대상이 없거나 모두 확장 상태. 확장/축소 제어 불가능.\\r\\n* `true`: 요소 또는 제어 대상 확장 상태.\\r\\n* `false`: 요소 또는 제어 대상 축소 상태.\\r\\n\\r\\n```html\\r\\n<!-- O: 어코디언 -->\\r\\n<dt>\\r\\n    <button type=\\\"button\\\" aria-controls=\\\"answer-99\\\" aria-expanded=\\\"false\\\">보너스 코인은 언제 소진되나요?</button>\\r\\n</dt>\\r\\n<dd id=\\\"answer-99\\\" hidden>\\r\\n    <p>만료기한이 짧은 보너스 코인이 일반 코인보다 먼저 소진됩니다.</p>\\r\\n</dd>\\r\\n\\r\\n<!-- O: 팝업 -->\\r\\n<a id=\\\"popular-btn\\\" href=\\\"#popular\\\" aria-haspopup=\\\"menu\\\" aria-expanded=\\\"false\\\">인기</a>\\r\\n<ul id=\\\"popular\\\" role=\\\"menu\\\" aria-labelledby=\\\"popular-btn\\\" hidden>\\r\\n    <li>\\r\\n        <a href=\\\"#romance\\\">로맨스</a>\\r\\n    </li>\\r\\n    <li>\\r\\n        <a href=\\\"#drama\\\">드라마</a>\\r\\n    </li>\\r\\n</ul>\\r\\n```\\r\\n\\r\\n이 밖에도 툴팁(role=\\\"tooltip\\\"), 알럿(role=\\\"alert\\\"), 알럿 대화상자(role=\\\"alertdialog\\\"), 대화상자(role=\\\"dialog\\\")와 같이 동적으로 표시 상태를 결정(토글)하는 요소에 `aria-expanded` 속성을 사용할 수 있습니다.\\r\\n\\r\\n\\r\\n\\r\\n## 15. 눌림 상태(aria-pressed)\\r\\n\\r\\n`aria-pressed` 속성은 토글 버튼(`button`, `role=\\\"button\\\"`)이 눌린 상태를 표시합니다. 흔하게 사용하는 속성은 아닙니다. 이 속성을 사용하기 전에 `input[type=\\\"radio\\\"]`, `input[type=\\\"checkbox\\\"]` 또는 `aria-checked` 또는 `aria-selected` 속성을 먼저 검토하는 것이 좋습니다. 속성 값은 일반적으로 `true` 또는 `false` 두 가지 값을 사용하지만, `tristate` 으로 `true`, `false`, `mixed` 세 가지 상태를 모두 표시할 수도 있습니다. `mixed` 값은 버튼이 제어하는 두 개 이상의 요소 상태값이 모두 `true` 이거나 모두 `false`가 아닌 복합적인 상태를 의미합니다.\\r\\n\\r\\n* `undefined(default)`: 속성 또는 값을 선언하지 않은 경우 초기값. 누름 상태 표시를 지원하지 않는 버튼.\\r\\n* `true`: 버튼을 누른 상태.\\r\\n* `false`: 버튼을 누르지 않은 상태.\\r\\n* `mixed`: `true` 또는 `false` 값으로 표시할 수 없는 복합적인 상태.\\r\\n\\r\\n```html\\r\\n<!-- O: true/false 모드 -->\\r\\n<button type=\\\"button\\\" aria-pressed=\\\"true\\\">음소거</button>\\r\\n<button type=\\\"button\\\" aria-pressed=\\\"false\\\">음소거</button>\\r\\n\\r\\n<!-- O: true/false/mixed 모드(이 예제에서 제어 대상이 하나는 true 이고 하나는 false 이다) -->\\r\\n<button type=\\\"button\\\" aria-pressed=\\\"mixed\\\" aria-controls=\\\"noti-text noti-sound\\\">알림 켜기</button>\\r\\n<ul>\\r\\n    <li>\\r\\n        <input id=\\\"noti-text\\\" type=\\\"checkbox\\\" checked>\\r\\n        <label for=\\\"noti-text\\\">문자 알림</label>\\r\\n    </li>\\r\\n    <li>\\r\\n        <input id=\\\"noti-sound\\\" type=\\\"checkbox\\\">\\r\\n        <label for=\\\"noti-sound\\\">소리 알림</label>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n```\\r\\n\\r\\n토글 버튼이 눌린 상태를 동적 텍스트로 전달하는 경우에는 `aria-pressed` 속성을 사용하지 않습니다. 예를 들어 버튼 설명 텍스트를 `배경음 켜기` 그리고 `배경음 끄기` 형태로 동적으로 변경한다면 `aria-pressed` 속성을 선언하는 것이 오히려 혼란을 초래합니다.\\r\\n\\r\\n\\r\\n## 16. 숨김 상태(aria-hidden)\\r\\n\\r\\n`aria-hidden` 속성은 접근성 API(보조기기 접근 가능성) 차단 상태를 결정합니다. 화면에 표시하지만 잠시 사용을 제한하는 콘텐츠에 적용합니다. 예를 들면 모달 대화상자를 화면에 표시할 때 모달 대화상자 뒤 본문 콘텐츠에 `aria-hidden=\\\"true\\\"` 속성을 선언하면 보조기기가 무시합니다.\\r\\n\\r\\n* `undefined(default)`: 속성 또는 값을 선언하지 않은 경우 초기값. 화면 표시 여부에 따라 접근성 API 차단 상태를 결정. 화면에 표시하면 `false`, 화면에서 숨기면 `true`.\\r\\n* `true`: 접근성 API 차단.(화면 표시 여부와 무관 API 차단)\\r\\n* `false`: 접근성 API 사용.(화면에 표시한 경우 API 사용)\\r\\n\\r\\n```html\\r\\n<!-- O: 모달 윈도우를 표시할 때 다른 요소를 차단 -->\\r\\n<body>\\r\\n    <div class=\\\"container\\\" aria-hidden=\\\"true\\\">\\r\\n        // 보조기기가 무시하는 영역\\r\\n    </div>\\r\\n    <div role=\\\"alertdialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"TITLE\\\" aria-describedby=\\\"DESCRIPTION\\\">\\r\\n        <h2 id=\\\"TITLE\\\">레진패스 안내</h2>\\r\\n        <p id=\\\"DESCRIPTION\\\">이 작품의 유료 에피소드 열람 시 자동으로 구매합니다. 레진패스를 적용하시겠습니까?</p>\\r\\n        <button type=\\\"button\\\">레진패스 적용</button>\\r\\n        <button type=\\\"button\\\">취소</button>\\r\\n    </div>\\r\\n</body>\\r\\n```\\r\\n\\r\\n`hidden` 속성은 요소를 화면에 표시하지 않기 때문에 접근 불가능한 상태가 되지만 `aria-hidden=\\\"true\\\"` 속성은 화면 표시 여부와 관계없이 보조기기 접근 불가능 상태를 만듭니다. `aria-hidden=\\\"true\\\"` 속성이 접근성 API를 차단하지만 포인팅 기능(마우스 커서, 키보드 초점)을 차단하는 것은 아니므로 개발자는 `aria-hidden=\\\"true\\\"` 요소가 포인팅을 받지 않도록 처리해야 합니다.\\r\\n\\r\\n\\r\\n\\r\\n## 17. 오류 상태(aria-invalid)\\r\\n\\r\\n`aria-invalid` 속성은 주로 `input` 요소에 선언하여 사용자가 입력한 값이 요구하는 형식과 일치하는지 여부를 나타냅니다. `aria-errormessage` 속성과 함께 사용하여 오류 설명을 제공할 수 있습니다.\\r\\n\\r\\n* `false(default)`: 오류 없음. `aria-invalid` 속성을 선언하지 않거나 값이 없으면 `false`로 간주.\\r\\n* `true`: 오류 있음.\\r\\n* `grammar`: 문법 오류.\\r\\n* `spelling`: 철자 오류.\\r\\n\\r\\n```html\\r\\n<!-- O: 입력 값이 유효하면 aria-invalid 속성을 생략 -->\\r\\n<label for=\\\"email\\\">이메일</label>\\r\\n<input id=\\\"email\\\" type=\\\"email\\\" required value=\\\"abc@xyz.xxx\\\" aria-errormessage=\\\"email-error-msg\\\">\\r\\n<p id=\\\"email-error-msg\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" hidden>이메일 형식이 유효하지 않습니다. 앳(@)과 마침표(.)를 포함해 주세요.</p>\\r\\n\\r\\n<!-- O: 입력 값이 오류이면 aria-invalid=\\\"true\\\" 속성을 선언 -->\\r\\n<label for=\\\"email\\\">이메일</label>\\r\\n<input id=\\\"email\\\" type=\\\"email\\\" required value=\\\"...\\\" aria-invalid=\\\"true\\\" aria-errormessage=\\\"email-error-msg\\\">\\r\\n<p id=\\\"email-error-msg\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\">이메일 형식이 유효하지 않습니다. 앳(@)과 마침표(.)를 포함해 주세요.</p>\\r\\n```\\r\\n\\r\\n`aria-errormessage` 속성은 `aria-invalid` 속성이 없거나 값이 `false`라면 동작하지 않습니다. 입력 값이 비어 있거나 유효하지 않은 초기 값을 제공한 때에는 `aria-invalid=\\\"true\\\"`를 선언하지 않아야 합니다.\\r\\n\\r\\n\\r\\n\\r\\n## 18. 제어 대상(aria-controls)\\r\\n\\r\\n`aria-controls` 속성은 현재 요소가 제어하는 대상을 명시하는 속성입니다. 주로 `role=\\\"tab\\\"`, `aria-haspopup`, `aria-expanded` 속성과 함께 `<button>` 요소가 무엇을 제어하는지 명시합니다. `aria-controls` 속성의 값은 하나 또는 그 이상의 ID 값 입니다. 흔한 경우는 아니지만 ID 값이 여럿인 경우 ID 값을 공백으로 분리합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: role=\\\"tab\\\" 요소에 aria-controls 속성 사용 -->\\r\\n<div role=\\\"tablist\\\">\\r\\n    <button type=\\\"button\\\" id=\\\"mon-anchor\\\" aria-controls=\\\"mon\\\" role=\\\"tab\\\" aria-selected=\\\"true\\\">월</button>\\r\\n    <button type=\\\"button\\\" id=\\\"tue-anchor\\\" aria-controls=\\\"tue\\\" role=\\\"tab\\\" aria-selected=\\\"false\\\">화</button>\\r\\n</div>\\r\\n<div id=\\\"mon\\\" tabindex=\\\"0\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"mon-anchor\\\">\\r\\n    월요일 콘텐츠...\\r\\n</div>\\r\\n<div id=\\\"tue\\\" tabindex=\\\"0\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"tue-anchor\\\" hidden>\\r\\n    화요일 콘텐츠...\\r\\n</div>\\r\\n\\r\\n<!-- O: aria-haspopup 속성과 함께 aria-controls 속성 사용 -->\\r\\n<button type=\\\"button\\\" aria-haspopup=\\\"dialog\\\" aria-controls=\\\"login-dialog\\\">로그인</button>\\r\\n<section id=\\\"login-dialog\\\" role=\\\"dialog\\\" aria-labelledby=\\\"login-heading\\\" aria-modal=\\\"true\\\" hidden>\\r\\n    <h2 id=\\\"login-heading\\\">로그인</h2>\\r\\n    ...\\r\\n</section>\\r\\n\\r\\n<!-- O: aria-expanded 속성과 함께 aria-controls 속성 사용 -->\\r\\n<dt>\\r\\n    <button type=\\\"button\\\" aria-controls=\\\"answer-99\\\" aria-expanded=\\\"false\\\">보너스 코인은 언제 소진되나요?</button>\\r\\n</dt>\\r\\n<dd id=\\\"answer-99\\\" hidden>\\r\\n    <p>만료기한이 짧은 보너스 코인이 일반 코인보다 먼저 소진됩니다.</p>\\r\\n</dd>\\r\\n```\\r\\n\\r\\n`<a>` 요소의 `href` 속성값을 통해 참조(제어) 대상을 명시한 경우 `aria-controls` 속성을 사용하지 않습니다.\\r\\n\\r\\n\\r\\n\\r\\n## 19. 실시간(aria-live)\\r\\n\\r\\n`aria-live` 속성은 실시간으로 내용을 갱신하는 영역을 의미합니다. 값으로 `polite`, `assertive`, `off(default)`를 설정할 수 있으며 갱신하는 내용의 중요도에 따라 선택합니다. 갱신 영역에 `polite`, `assertive`값을 사용하면 갱신하는 순간 보조기기는 사용자에게 내용을 전달합니다. `polite`값은 중요도가 낮은 내용에 사용하여 현재 진행중인 음성 또는 타이핑을 방해하지 않고 뒤늦게 전달합니다. `assertive`값은 중요도가 높은 내용에 사용하여 현재 진행중인 보조기기 작업을 중단하고 갱신 내용을 즉시 사용자에게 전달합니다.\\r\\n\\r\\n일반적으로 `role` 속성의 값이 `alert`인 경우 사용하면 적절합니다. 그 밖에 Ajax 기법을 이용하여 실시간으로 내용을 갱신하는 모든 영역(채팅, 오류, 로그, 상태 표시)에 사용할 수 있습니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 알럿 -->\\r\\n<div role=\\\"alert\\\" aria-live=\\\"assertive\\\">\\r\\n    <p>로그인 후 이용할 수 있습니다.</p>\\r\\n</div>\\r\\n```\\r\\n\\r\\n`assertive`값은 사용자의 현재 작업을 방해할 수 있기 때문에 중요도가 높은 내용을 선별하여 신중하게 적용해야 합니다.\\r\\n\\r\\n\\r\\n## 20. 간결한 설명 참조(aria-labelledby)\\r\\n\\r\\n`aria-labelledby`, `aria-label`, `aria-describedby` 속성은 모두 현재 요소에 설명을 제공하는 속성입니다. `aria-labelledby` 속성은 `ID(s)` 값을 이용하여 '간결한' 내용을 참조(연결)하는 방식으로 설명합니다. 보통 `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `a`, `button` 요소를 참조하면 적절합니다. `aria-label` 속성과 함께 선언하는 경우 `aria-labelledby` 속성이 우선순위가 높기 때문에 보조기기는 `aria-labelledby` 속성을 설명합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 헤딩 설명 참조 -->\\r\\n<section aria-labelledby=\\\"LZ-PATH\\\" hidden>\\r\\n    <h2 id=\\\"LZ-PATH\\\">레진패스란?</h2>\\r\\n    <p>이 작품의 유료 에피소드 열람 시 자동으로 구매합니다.</p>\\r\\n</section>\\r\\n\\r\\n<!-- O: 링크 설명 참조 -->\\r\\n<a id=\\\"LZ-PATH\\\" href=\\\"#LZ-PATH-TEXT\\\">레진패스란?</a>\\r\\n<div id=\\\"LZ-PATH-TEXT\\\" aria-labelledby=\\\"LZ-PATH\\\" hidden>\\r\\n    <p>이 작품의 유료 에피소드 열람 시 자동으로 구매합니다.</p>\\r\\n</div>\\r\\n```\\r\\n\\r\\n`aria-labelledby` 속성으로 숨김 처리한 설명을 참조하면 안 됩니다. 참조가 불가능한 설명은 `aria-label` 속성을 사용합니다. 자세한 설명을 참조하면 안 됩니다. 자세한 설명은 `aria-descibedby` 속성을 사용합니다.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## 21. 간결한 설명(aria-label)\\r\\n\\r\\n`aria-labelledby`, `aria-label`, `aria-describedby` 속성은 모두 현재 요소에 설명을 제공하는 속성입니다. `aria-label` 속성은 값에 '간결한' 설명(string)을 직접 제공합니다. 가능한 한 `aria-labelledby` 속성을 사용하는 것이 좋습니다. `aria-label` 속성은 현재 요소를 설명할 다른 참조(연결) 요소가 없는 경우에만 사용합니다. `aria-labelledby` 속성과 함께 선언하는 경우 `aria-label` 속성이 우선순위가 낮기 때문에 보조기기는 `aria-labelledby` 속성을 설명합니다.\\r\\n\\r\\n\\r\\n\\r\\n```html\\r\\n<!-- O: 참조할 설명이 없는 경우 -->\\r\\n<form>\\r\\n    <input type=\\\"search\\\" aria-label=\\\"웹툰 검색\\\">\\r\\n    <button>검색</button>\\r\\n</form>\\r\\n```\\r\\n\\r\\n`aria-label` 속성을 장황하게 작성하면 안 됩니다. 자세한 설명은 `aria-descibedby` 속성을 사용합니다.\\r\\n\\r\\n\\r\\n## 22. 자세한 설명 참조(aria-describedby)\\r\\n\\r\\n`aria-labelledby`, `aria-label`, `aria-describedby` 속성은 모두 현재 요소에 설명을 제공하는 속성입니다. `aria-describedby` 속성은 `ID(s)` 값을 이용하여 '상세한' 내용을 참조(연결)하는 방식으로 설명합니다. 링크(`a`), 폼 콘트롤(`input`, `textarea`, `select`, `button`), 알럿(role=\\\"alert\\\"), 알럿 대화상자(role=\\\"alertdialog\\\") 요소에 사용하면 적절합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: 버튼 요소에 상세한 설명 제공 -->\\r\\n<button aria-describedby=\\\"TIP-DEL\\\">게시물 삭제</button>\\r\\n<p id=\\\"TIP-DEL\\\" role=\\\"tooltip\\\" hidden>게시물 삭제 후 복원할 수 없음.</p>\\r\\n\\r\\n<!-- O: 알럿 대화상자 요소에 상세한 설명 제공 -->\\r\\n<div role=\\\"alertdialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"TITLE\\\" aria-describedby=\\\"DESCRIPTION\\\">\\r\\n    <h2 id=\\\"TITLE\\\">레진패스 안내</h2>\\r\\n    <p id=\\\"DESCRIPTION\\\">이 작품의 유료 에피소드 열람 시 자동으로 구매합니다. 레진패스를 적용하시겠습니까?</p>\\r\\n    <button type=\\\"button\\\">레진패스 적용</button>\\r\\n    <button type=\\\"button\\\">취소</button>\\r\\n</div>\\r\\n```\\r\\n\\r\\n`aria-describedby` 속성은 간결한 설명을 참조하기에 적절하지 않습니다. 간결한 설명은 `aria-labelledby` 속성을 사용합니다.\\r\\n\\r\\n\\r\\n## 23. 오류 설명(aria-errormessage)\\r\\n\\r\\n`aria-errormessage` 속성은 주로 `input` 요소에 선언하여 오류 메시지를 제공하는 요소를 값으로 참조합니다. `aria-invalid=\\\"true\\\"` 속성을 활성화하면 보조기기는 `aria-errormessage` 속성이 참조하는 요소를 오류 메시지로 전달합니다.\\r\\n\\r\\n```html\\r\\n<!-- O: aria-invalid 값이 true이면 보조기기는 aria-errormessage 값을 참조 -->\\r\\n<label for=\\\"email\\\">이메일</label>\\r\\n<input id=\\\"email\\\" type=\\\"email\\\" required value=\\\"...\\\" aria-invalid=\\\"true\\\" aria-errormessage=\\\"email-error-msg\\\">\\r\\n<p id=\\\"email-error-msg\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\">이메일 형식이 유효하지 않습니다. 앳(@)과 마침표(.)를 포함해 주세요.</p>\\r\\n```\\r\\n\\r\\n`aria-errormessage`가 참조하는 요소를 동적으로 화면에 표시한다면 `aria-live` 속성을 이용해서 실시간으로 보조기기에 오류 메시지를 전달할 수 있습니다. 오류 메시지는 '오류 원인과 해결 방법'을 포함해야 합니다.\\r\\n\\r\\n\\r\\n## 24. 모달(aria-modal)\\r\\n\\r\\n`aria-modal` 속성은 요소가 모달인지 여부를 보조기기에 전달합니다. 모달은 본문 위에 대화상자를 띄워 본문을 차단한 상태로 상호작용하는 요소를 의미합니다. 일반적으로 `role=\\\"alertdialog\\\"` 또는 `role=\\\"dialog\\\"` 요소를 모달 형태로 표시할 수 있는데 이런 경우 `aria-modal=\\\"true\\\"` 속성을 함께 선언합니다.\\r\\n\\r\\n* `false(default)`: 속성 또는 값을 선언하지 않은 경우 초기값. 모달 콘텐츠 아님.\\r\\n* `true`: 모달 콘텐츠.\\r\\n\\r\\n```html\\r\\n<!-- O: 알럿 대화상자에 aria-modal=\\\"true\\\" 선언 -->\\r\\n<div role=\\\"alertdialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"TITLE\\\" aria-describedby=\\\"DESCRIPTION\\\">\\r\\n    <h2 id=\\\"TITLE\\\">레진패스 안내</h2>\\r\\n    <p id=\\\"DESCRIPTION\\\">이 작품의 유료 에피소드 열람 시 자동으로 구매합니다. 레진패스를 적용하시겠습니까?</p>\\r\\n    <button type=\\\"button\\\">레진패스 적용</button>\\r\\n    <button type=\\\"button\\\">취소</button>\\r\\n</div>\\r\\n\\r\\n<!-- O: 대화상자에 aria-modal=\\\"true\\\" 선언 -->\\r\\n<section role=\\\"dialog\\\" aria-modal=\\\"true\\\" aria-labelledby=\\\"TITLE\\\">\\r\\n    <h2 id=\\\"TITLE\\\">로그인</h2>\\r\\n    <form>\\r\\n        <label for=\\\"ID\\\">아이디</label>\\r\\n        <input id=\\\"ID\\\">\\r\\n        <label for=\\\"PW\\\">비밀번호</label>\\r\\n        <input id=\\\"PW\\\" type=\\\"password\\\">\\r\\n        <button>로그인</button>\\r\\n    </form>\\r\\n</section>\\r\\n```\\r\\n\\r\\n모달 콘텐츠를 화면에 표시할 때 사용할 수 없는 요소에 `aria-hidden=\\\"true\\\"` 속성을 선언해서 보조기기가 무시하도록 설정해야 합니다. `aria-hidden=\\\"true\\\"` 속성이 접근성 API를 차단하지만 포인팅 기능(마우스 커서, 키보드 초점)을 차단하는 것은 아니므로 개발자는 `aria-hidden=\\\"true\\\"` 요소가 포인팅을 받지 않도록 처리해야 합니다.\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n---\\r\\n\\r\\n<!--MIT License\\r\\n\\r\\nCopyright (c) 2017 레진엔터테인먼트\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\r\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\nin the Software without restriction, including without limitation the rights\\r\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\ncopies of the Software, and to permit persons to whom the Software is\\r\\nfurnished to do so, subject to the following conditions:\\r\\n\\r\\nThe above copyright notice and this permission notice shall be included in all\\r\\ncopies or substantial portions of the Software.\\r\\n\\r\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\nSOFTWARE.-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 posts\">\r\n                    <div class=\"lottie-banner\">\r\n                        <LottieLoader :lottieData=\"lottieJson\"/>\r\n                    </div>\r\n                    <!--\r\n                        MIT License\r\n\r\n                        Copyright (c) 2017 레진엔터테인먼트\r\n\r\n                        Permission is hereby granted, free of charge, to any person obtaining a copy\r\n                        of this software and associated documentation files (the \"Software\"), to deal\r\n                        in the Software without restriction, including without limitation the rights\r\n                        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n                        copies of the Software, and to permit persons to whom the Software is\r\n                        furnished to do so, subject to the following conditions:\r\n\r\n                        The above copyright notice and this permission notice shall be included in all\r\n                        copies or substantial portions of the Software.\r\n\r\n                        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n                        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n                        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n                        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n                        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n                        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n                        SOFTWARE.\r\n                    -->\r\n                    <PageMarkDown :loader=\"postMd\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport PageMarkDown from '@/components/PageMarkDown.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieRul.json'\r\nimport postMd from '@/posts/rul/WAI-ARIA가이드.md' \r\n\r\n\r\nconst title = ref('WAI-ARIA 가이드')\r\nconst pageClass = ref(['rul', 'RuleAria'])\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./RuleAria.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RuleAria.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default \"---\\r\\ntitle: 코드 작성 규칙 안내\\r\\ndate: 2024.06\\r\\n---\\r\\n\\r\\n본 문서는 프로젝트를 수행하면서 준수해야 할 코드 작성 규칙을 설명합니다. \\r\\n주요 기준은 공통 규칙, HTML 작성 규칙, CSS 작성 규칙, js 작성 규칙으로 나누어 간략히 안내합니다.\\r\\n해당 내용을 참고하여 프로젝트 상황에 맞게 적용하면 됩니다.\\r\\n\\r\\n## 1. 공통 규칙\\r\\n\\r\\nHTML, CSS, JS 작업할 시 따라야할 공통 규칙은 다음과 같습니다.\\r\\n\\r\\n### 1.1 들여쓰기\\r\\n\\r\\n* 1탭 들여쓰기를 사용하며, 1탭의 크기는 공백 4칸으로 설정합니다.\\r\\n* 여는 태그와 닫는 태그는 동일한 탭크기 수준을 유지해야 합니다.\\r\\n* vscode에서 `Ctrl + Shift + P` 입력 후 `settings.json` 검색하여 다음과 같이 json 값을 추가 합니다.\\r\\n\\r\\n```json\\r\\n{\\r\\n    // 기존 내용 ...\\r\\n    \\\"editor.tabSize\\\": 4,\\r\\n}\\r\\n```\\r\\n\\r\\n### 1.2 코드 스타일\\r\\n\\r\\n* 코드 라인 끝에는 불필요한 공백을 제거합니다.\\r\\n* 의미없는 줄바꿈은 되도록 지양합니다.\\r\\n* 컨텐츠 구분의 용도로 줄바꿈할 시 2줄 이상 넘어가지 않도록 합니다.\\r\\n\\r\\n```html\\r\\n<!-- 잘못된 예 (X) -->\\r\\n<div class=\\\"content\\\">\\r\\n    \\r\\n    <div class=\\\"inner\\\">\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"inner\\\">\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- 올바른 예 (O) -->\\r\\n<div class=\\\"content\\\">\\r\\n    <div class=\\\"inner\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"inner\\\">\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n\\r\\n## 2. HTML 작성 규칙\\r\\n\\r\\n### 2.1 HTML 공통\\r\\n\\r\\n* 모든 태그는 소문자로 작성합니다.\\r\\n* 같은 이름의 속성은 하나만 존재해야 하며, 속성 값에는 큰따옴표 (\\\")를 사용합니다.\\r\\n* `id`는 불가피하게 필요한 경우에만 사용하고, 스타일 작업 시에는 클래스를 활용합니다.\\r\\n\\r\\n```html\\r\\n<!-- 잘못된 예 (X) -->\\r\\n<SPAN>안녕하세요.</SPAN> <!-- 대문자 사용 금지 -->\\r\\n<label for=\\\"sample-id\\\">라벨</label>\\r\\n<input type=\\\"text\\\" id=\\\"sample-id\\\" class=\\\"sample-class\\\" title=\\\"인풋입니다.\\\" title=\\\"123\\\"/> <!-- 속성 중복 금지 -->\\r\\n\\r\\n<!-- 올바른 예 (O) -->\\r\\n<span>안녕하세요.</span> \\r\\n<label for=\\\"sample-id\\\">라벨</label>\\r\\n<input type=\\\"text\\\" id=\\\"sample-id\\\" class=\\\"sample-class\\\" title=\\\"인풋입니다.\\\"/> \\r\\n```\\r\\n\\r\\n### 2.2 상호작용 요소 (a, button)\\r\\n\\r\\n* 상황별 사용 기준은 다음과 같습니다.\\r\\n    * `<a>` : 페이지 이동인 경우 사용합니다.\\r\\n    * `<button>` : 동작이나 상태 변경 등 사용 합니다.\\r\\n* `<button>` 태그 사용시 type 속성을 명시해야 합니다.\\r\\n* 상호작용 요소 내 상호작용 요소를 넣지 말아야 합니다.\\r\\n\\r\\n```html\\r\\n<!-- 잘못된 예 (X) -->\\r\\n<a href=\\\"javascript:void(0)\\\">\\r\\n    <input type=\\\"radio\\\" name=\\\"radio-01\\\"/>\\r\\n    <button></button>\\r\\n</a>\\r\\n\\r\\n<!-- 올바른 예 (O) -->\\r\\n<div>\\r\\n    <a href=\\\"javascript:void(0)\\\"></a>\\r\\n    <input type=\\\"radio\\\" name=\\\"radio-01\\\"/>\\r\\n    <button type=\\\"button\\\"></button>\\r\\n</div>\\r\\n```\\r\\n\\r\\n\\r\\n### 2.3 목록 요소 (ul, ol, dl)\\r\\n\\r\\n* 목록 요소 사용 시의 기준은 다음과 같습니다.\\r\\n    * `<ul>` : 순서가 없는 목록을 만들 때 사용합니다.\\r\\n    * `<ol>` : 순서가 있는 목록을 만들 때 사용합니다.\\r\\n    * `<dl>` : 정의 목록을 만들 때 사용합니다.\\r\\n* 목록 내부 요소는 항상 적절한 태그 각각 `<li> // <dt>, <dd>`를 사용해야 합니다.\\r\\n* `<ul>, <ol>`요소의 자식 요소로는 `<li>` 이외의 다른 요소를 넣으면 안 됩니다.\\r\\n    * `<dl>` 인 경우 자식 요소에 `<div>` 태그 사용할 수 있습니다.\\r\\n\\r\\n```html\\r\\n<!-- 잘못된 예 (X) -->\\r\\n<ul>\\r\\n    <li>항목 1</li>\\r\\n    <div>항목 2</div>\\r\\n    <ul>\\r\\n        <li>별개 항목 1</li>\\r\\n    </ul>\\r\\n</ul>\\r\\n\\r\\n<dl>\\r\\n    <dt>항목 1</dt>\\r\\n    <dd>설명 1</dd>\\r\\n    <dl>\\r\\n        <dt>항목 2</dt>\\r\\n        <dd>설명 2</dd>\\r\\n    </dl>\\r\\n</dl>\\r\\n<!--// 잘못된 예 (X) -->\\r\\n\\r\\n<!-- 올바른 예 (O) -->\\r\\n<ul>\\r\\n    <li>항목 1</li>\\r\\n    <li>항목 2</li>\\r\\n    <li>\\r\\n        <ul>\\r\\n            <li>별개 항목 1</li>\\r\\n        </ul>\\r\\n    </li>\\r\\n</ul>\\r\\n\\r\\n<dl>\\r\\n    <dt>항목 1</dt>\\r\\n    <dd>설명 1</dd>\\r\\n    <div> <!-- dl 안에 div 허용 가능 -->\\r\\n        <dt>항목 2</dt>\\r\\n        <dd>설명 2</dd>\\r\\n    </div>\\r\\n</dl>\\r\\n<!--// 올바른 예 (O) -->\\r\\n```\\r\\n\\r\\n\\r\\n### 2.4 HTML 주석 처리\\r\\n\\r\\n* HTML 문서에서 주석 작성 시 다음 사항을 고려합니다.\\r\\n    * 시작과 끝이 필요한 주석인 경우 끝 주석에 `<!--// 내용 -->` 이중 슬래시 (//) 표기를 합니다. \\r\\n    * 코드의 특정 부분에 대한 설명을 제공하여 코드의 이해도를 높입니다.\\r\\n    * 개발파트에 수정내용 전달시 주석 내용에도 날짜표기를 해야 합니다.\\r\\n\\r\\n```html\\r\\n\\r\\n- case 01 : 시작과 끝 주석\\r\\n<!-- 게시판 영역 -->\\r\\n<!--// 게시판 영역 -->\\r\\n\\r\\n- case 02 : 코드 설명이 필요한 경우\\r\\n    <!-- \\r\\n        * sample-box 의 추가 class 내용\\r\\n        - type-bank : 은행 타입\\r\\n        - type-card : 카드사 타입\\r\\n    -->\\r\\n    <div class=\\\"sample-box type-bank\\\">\\r\\n        <div class=\\\"sample-inner\\\"> 내용 </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n- case 03 : 수정내용 전달시 주석 내용  \\r\\n            * 프로젝트 상황에 맞게 규칙 정하여 사용 합니다.\\r\\n    <!-- 수정 20240618 : 이름 - 'sample-box' 삭제 -->\\r\\n    <!-- <div class=\\\"sample-box type-bank\\\">\\r\\n        <div class=\\\"sample-inner\\\"> 내용 </div>\\r\\n    </div>-->\\r\\n    <!--// 수정 20240618 : 이름 - 'sample-box' 삭제 -->\\r\\n```   \\r\\n\\r\\n\\r\\n## 3. CSS 작성 규칙\\r\\n\\r\\n### 3.1 CSS 속성\\r\\n\\r\\n* SCSS인 경우 줄바꿈으로 작업하며, CSS인 경우 한줄로 작업합니다.\\r\\n* 스타일의 모든 속성은 소문자로 작성합니다.\\r\\n* 속성을 축약할 수 있는 경우, 축약형으로 작성합니다.\\r\\n* 마지막 선언된 속성인 경우에도 세미콜론(;) 사용합니다.\\r\\n* `important` 인 경우 불가피한 상황을 제외한 나머지 사용하지 않습니다.\\r\\n* `z-index` 는 레이어 순서 규칙을 정하여 사용합니다.\\r\\n\\r\\n```scss\\r\\n/* css 인 경우 */\\r\\n.sample-01 { width: 10rem; height: 10rem; background: url('../sample.png') no-repeat center/contain; }\\r\\n\\r\\n/* scss 인 경우 */\\r\\n.sample-01 { \\r\\n    width: 10rem; \\r\\n    height: 10rem; \\r\\n    background: url('../sample.png') no-repeat center/contain; \\r\\n}\\r\\n\\r\\n/**\\r\\n * z-index 규칙  (예시)\\r\\n * header 고정  : 1000\\r\\n * dimmed       : 1001\\r\\n * popup        : 1002\\r\\n */\\r\\n```\\r\\n### 3.2 공백 사용\\r\\n* 속성 콜론(:) 뒤에 공백 사용합니다.\\r\\n* 속성값 콤마(,) 뒤에 공백 사용합니다.\\r\\n```css\\r\\n.sample-02 { color: rgba(0, 0, 0, 1); }\\r\\n```\\r\\n\\r\\n\\r\\n### 3.3 숨김처리 텍스트 스타일\\r\\n\\r\\n* 숨김처리가 필요한 텍스트인 경우 스타일 작업시 다음과 같은 속성을 사용합니다.\\r\\n```SCSS\\r\\n/* 숨김텍스트 예시 (scss mixin) */\\r\\n@mixin ally-hidden {\\r\\n    position: absolute;\\r\\n    clip: rect(0, 0, 0, 0);\\r\\n    clip-path: polygon(0 0, 0 0, 0 0);\\r\\n    width: 1px;\\r\\n    height: 1px;\\r\\n    margin: -1px;\\r\\n    overflow: hidden;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\\r\\n/* css */\\r\\n.ally-hidden {\\r\\n    position: absolute;\\r\\n    clip: rect(0, 0, 0, 0);\\r\\n    clip-path: polygon(0 0, 0 0, 0 0);\\r\\n    width: 1px;\\r\\n    height: 1px;\\r\\n    margin: -1px;\\r\\n    overflow: hidden;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n```\\r\\n\\r\\n\\r\\n### 3.4 CSS 주석 처리\\r\\n\\r\\n* CSS인 경우 `/* */` 사용하며, 의미없는 종료 주석은 사용하지 않습니다.\\r\\n* SCSS인 경우 컴파일시 필요없는 주석일 때, `//` 이중슬래시로 사용해도 됩니다.\\r\\n\\r\\n```scss\\r\\n\\r\\n/* scss 인 경우 컴파일 시 남음 */\\r\\n// scss 인 경우 컴파일 시 안남음  (css에서 사용불가)\\r\\n\\r\\n/**\\r\\n * 블럭 주석\\r\\n * \\r\\n */\\r\\n\\r\\n```\\r\\n\\r\\n## 4. JS 작성 규칙\\r\\n\\r\\n### 4.1 JS 코드 스타일\\r\\n\\r\\n* 문자열에는 일관되게 작은 따옴표(') 를 사용합니다.\\r\\n* 연산자와 키워드 주변, 그리고 콤마(,) 뒤에 공백을 사용합니다.\\r\\n* 불필요한 줄바꿈은 피하고, 논리 단위로 가독성을 위한 구분용도로 줄바꿈은 사용 가능합니다.\\r\\n\\r\\n```js\\r\\nconst example = '안녕하세요.'\\r\\nlet number = 10\\r\\n\\r\\nfunction sampleAdd(a, b) {\\r\\n    return a + b\\r\\n}\\r\\n```\\r\\n\\r\\n### 4.2 변수 선언\\r\\n\\r\\n* 변수 선언시 프로젝트 환경에서 ES6 문법이 허용되는 경우 `var` 대신 `const`와 `let` 을 사용합니다.\\r\\n    * const : 재할당 불가능\\r\\n    * let   : 재할당 가능\\r\\n```js\\r\\nconst maxCount = 100\\r\\nlet currentCount = 1\\r\\n\\r\\nmaxCount = 10 // error\\r\\ncurrentCount = 2 // 재할당 가능\\r\\n```\\r\\n\\r\\n### 4.3 함수 선언\\r\\n\\r\\n* 함수 선언식과 표현식, arrow 함수를 상황에 맞게 적절히 사용합니다.\\r\\n    * arrow 함수인 경우 ES6 문법에서만 사용 가능합니다.\\r\\n```js\\r\\n// 함수 선언식\\r\\nfunction sampleAdd(a, b) {\\r\\n  return a + b\\r\\n}\\r\\n\\r\\n// 함수 표현식\\r\\nconst sampleSub = function(a, b) {\\r\\n  return a - b\\r\\n}\\r\\n\\r\\n// arrow 함수 (es6)\\r\\nconst sampleDivide = (a, b) => {\\r\\n    return a / b\\r\\n}\\r\\n```\\r\\n\\r\\n### 4.4 비교 연산자\\r\\n\\r\\n* 비교 연산자 사용시 정확한 비교를 위해 `==`, `!=` 대신 `===`, `!==` 사용 합니다.\\r\\n\\r\\n```js\\r\\n\\r\\nconst a = 5     // typeof number\\r\\nconst b = '5'   // typeof string\\r\\n\\r\\n// 정확한 비교 예시\\r\\nconsole.log(a == b)   // [true] 타입을 변환하여 비교하므로 같다고 판단\\r\\nconsole.log(a === b) // [false] 타입이 다르므로 다르다고 판단\\r\\n```\\r\\n\\r\\n### 4.5 조건문\\r\\n\\r\\n* 조건문을 사용할 때, 실행 문장이 한 줄이라면 중괄호 `{}`를 생략할 수 있습니다.\\r\\n    * 여러 줄의 실행 문장이 있는 경우에는 되도록 중괄호를 사용합니다.\\r\\n\\r\\n```js\\r\\n\\r\\nconst number1 = 5\\r\\nconst number2 = -1\\r\\n\\r\\n// 조건문 한줄 case\\r\\nconst sampleConsole01 = (num) => {\\r\\n    if (num >= 0) console.log(`sampleConsole : ${num} 가 0 이상 입니다.`)\\r\\n    else console.log(`sampleConsole : ${num} 가 0 미만 입니다.`)\\r\\n}\\r\\n\\r\\n// 조건문 중괄호 case\\r\\nconst sampleConsole02 = (num) => {\\r\\n    if (num >= 0) {\\r\\n        console.log(`sampleConsole : ${num} 가 0 이상 입니다.`)\\r\\n    } else {\\r\\n        console.log(`sampleConsole : ${num} 가 0 미만 입니다.`)\\r\\n    }\\r\\n}\\r\\n\\r\\nsampleConsole01(number1)\\r\\nsampleConsole02(number2)\\r\\n```     \\r\\n\\r\\n### 4.6 JS 주석 처리\\r\\n\\r\\n* 단순한 한줄인 경우 `//` 이중슬래시 주석을 사용하며, 여러줄인 경우 `/** */` 블럭 주석을 사용합니다.\\r\\n\\r\\n```js\\r\\n// 현재 날짜와 시간을 출력\\r\\nconsole.log(new Date())\\r\\n\\r\\n/**\\r\\n * 문자를 대문자로 변환\\r\\n * @param {string} text : 입력 문자열\\r\\n * @returns {string}    : 대문자로 변환\\r\\n */\\r\\nfunction toUpperCase(text) {\\r\\n    return text.toUpperCase()\\r\\n}\\r\\n```  \\r\\n\\r\\n---\\r\\n\\r\\n프로젝트를 수행할 때 위의 내용을 참고해 주시기 바랍니다.\\r\\n\";","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 posts\">\r\n                    <div class=\"lottie-banner\">\r\n                        <LottieLoader :lottieData=\"lottieJson\"/>\r\n                    </div>\r\n                    <PageMarkDown :loader=\"postMd\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport PageMarkDown from '@/components/PageMarkDown.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieRul.json'\r\nimport postMd from '@/posts/rul/코드규칙.md' \r\n\r\nconst title = ref('코드 규칙')\r\nconst pageClass = ref(['rul', 'RuleCode'])\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./RuleCode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RuleCode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default \"---\\r\\ntitle: 기본 작업 규칙 안내\\r\\ndate: 2024.06\\r\\n---\\r\\n\\r\\n본 문서는 프로젝트를 수행하면서 준수해야 할 기본 작업 규칙을 설명합니다. \\r\\n주요 기준은 디렉토리 구성, 레이아웃 구성, 컨텐츠 영역, 웹 접근성으로 나누어 간략히 안내합니다.\\r\\n해당 내용을 참고하여 프로젝트 상황에 맞게 적용하면 됩니다.\\r\\n\\r\\n## 1. 디렉토리 구성\\r\\n\\r\\n\\r\\n디렉토리 구조는 프로젝트 내 개발환경에 맞게 이루어져야 합니다.\\r\\n퍼블에서 디렉토리 구조를 구성해야 한다면 아래와 같이 구성합니다.\\r\\n\\r\\n> 해당 디렉토리 구성은 참고용으로 프로젝트 내 상황에 맞게 폴더 구조를 구성해야 합니다.\\r\\n{:class=\\\"prompt-warning\\\"}\\r\\n\\r\\n###  디렉토리 구조\\r\\n\\r\\n```bash\\r\\n>_ project 디렉토리 구조 (예시)\\r\\n\\r\\n   src\\r\\n    ├ assets         \\r\\n    │   ├ css         \\r\\n    │   │  └ scss\\r\\n    │   │      ├ common              \\r\\n    │   │      ├ components      \\r\\n    │   │      ├ templates      \\r\\n    │   │      └ pages\\r\\n    │   │          ├ 메뉴코드\\r\\n    │   │          ├ 메뉴코드\\r\\n    │   │          └ 메뉴코드            \\r\\n    │   ├ font        \\r\\n    │   ├ images       \\r\\n    │   └ js          \\r\\n    │ \\r\\n    └ views               \\r\\n        ├ guide  \\r\\n        │   ├ documents  \\r\\n        │   ├ components   \\r\\n        │   ├ templates\\r\\n        │   ├ css   \\r\\n        │   └ js     \\r\\n        ├ 메뉴코드\\r\\n        ├ 메뉴코드\\r\\n        └ 메뉴코드\\r\\n``` \\r\\n\\r\\n###  분류폴더 설명 \\r\\n\\r\\n#### - assets 기준 (예시)\\r\\n| 분류폴더 | 서브폴더  | 파일명  | 폴더 및 파일 설명  |\\r\\n| --- | --- | --- | --- |\\r\\n| css  |  | app.css |  최종적으로 컴파일된 css 파일 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  |\\r\\n| └ scss| common | _reset.scss <br> _font.scss<br>  _variable.scss <br> _mixin.scss <br>  _common.scss <br> _layout.scss <br> ...  | 프로젝트 내 공통으로 해당되는 스타일 |\\r\\n|  | components | _button.scss <br> _input.scss <br> _checkbox.scss <br> _radio.scss <br> ...  |  컴포넌트에 사용하는 스타일 |\\r\\n|  | templates | _table.scss <br> _form-field.scss <br> _card.scss <br> ...  | 템플릿에 사용하는 스타일 |\\r\\n|  | pages   | _pages.scss  | 각 화면의 scss를 임포트하는 파일 |\\r\\n|  | └ 메뉴코드 | _화면id.scss <br> _화면id.scss  | 화면단에서 화면 고유 class 에 종속하여 사용. <br> 해당 화면 내에서 스타일 다른 부분을 수정하는 용도로 쓰임. |\\r\\n|   |  | app.scss | 여러 scss 파일을 캐스케이딩 순서로 임포트  |\\r\\n| font    |    | 000.woff <br> 000.ttf <br> ...   | 각 폰트 파일을 모아두는 폴더 |\\r\\n| images   | common <br> icon <br> ... |    | 이미지를 용도별로 모아두는 폴더  |\\r\\n|  js  |  | ui-component.js | Ui 에 관한 공통 스크립트  (예시) |\\r\\n\\r\\n<br>\\r\\n\\r\\n#### scss 컴파일 참고사항 (VSCode 확장)\\r\\n\\r\\n- **Live Sass Compiler** [(link)](https://marketplace.visualstudio.com/items?itemName=glenn2223.live-sass){:target=\\\"_blank\\\"}      \\r\\n    - 작업한 scss를 자동으로 컴파일 해주는 기능입니다. 상태표시줄 우측에 `wacth Sass` 로 활성화 시킬 수 있습니다.\\r\\n    - `설정(Ctrl + [ , ])` 에 들어가서 'Live Sass Compile › Settings: Formats' 검색 후 settings.json 으로 포맷 변경이 가능합니다.\\r\\n```json\\r\\n{\\r\\n    // 기존내용 ...\\r\\n    \\\"liveSassCompile.settings.formats\\\": [    \\r\\n        {\\r\\n            \\\"format\\\": \\\"expanded\\\",\\r\\n            \\\"extensionName\\\": \\\".css\\\",\\r\\n            \\\"savePath\\\": \\\"src/assets/css\\\"\\r\\n        }\\r\\n    ],\\r\\n}\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n## 2. 레이아웃 구성\\r\\n\\r\\n전체 Layout은 HTML5로 구성하며, body 태그 안에 바로 `<div class=\\\"wrap\\\"></div>` 으로 구성합니다.\\r\\n\\r\\n### 공통 레이아웃 구조\\r\\n```html\\r\\n<!-- 예시 -->\\r\\n<body>\\r\\n    <div class=\\\"wrap\\\">\\r\\n        <header class=\\\"header\\\">\\r\\n        </header>\\r\\n        <main class=\\\"main\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <nav class=\\\"lnb-nav\\\"></nav>\\r\\n                <div class=\\\"contents\\\">\\r\\n                    <div class=\\\"section-area\\\">\\r\\n                        <div class=\\\"section-header\\\"></div>\\r\\n                        <div class=\\\"section-body\\\"></div>\\r\\n                        <div class=\\\"section-footer\\\"></div>\\r\\n                    </div>\\r\\n                    <div class=\\\"section-area\\\">\\r\\n                        <div class=\\\"section-header\\\"></div>\\r\\n                        <div class=\\\"section-body\\\"></div>\\r\\n                        <div class=\\\"section-footer\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </main>\\r\\n        <footer class=\\\"footer\\\">\\r\\n        </footer>\\r\\n    </div>\\r\\n</body>\\r\\n```\\r\\n- **헤더(header)**\\r\\n  - 사이트의 상단에 위치, 로고 및 네비게이션 메뉴 포함한 영역\\r\\n- **메인 (main)**\\r\\n  - 각 페이지의 주요 콘텐츠가 표시되는 영역\\r\\n- **사이드바 (nav)**\\r\\n  - lnb가 존재할 시 사용되는 영역\\r\\n- **푸터 (Footer)**\\r\\n  - 사이트의 하단에 위치, 저작권 정보 및 추가 링크 포함한 영역\\r\\n\\r\\n\\r\\n## 3. 컨텐츠 영역\\r\\n\\r\\n### 텍스트 콘텐츠\\r\\n- 모든 텍스트는 적절한 HTML 태그를 사용합니다.\\r\\n  - 제목: `<h1>`, `<h2>`, `<h3>`  등\\r\\n  - 단락: `<p>`\\r\\n  - 기본목록: `<ul>`, `<ol>`, `<li>`\\r\\n  - 설명목록 : `<dl>`, `<dt>`, `<dd>`\\r\\n\\r\\n### 특수기호\\r\\nHTML 문서를 작성할 때 본문에 들어갈 수 없는 특수문자인 경우, 유니코드로 사용합니다.\\r\\n\\r\\n- 주요 사용되는 유니코드\\r\\n    - [ &nbsp;&nbsp; ]  : `&nbsp;`\\r\\n    - [ < ] : `&lt;`\\r\\n    - [ > ] : `&rt;`\\r\\n    - [ & ] : `&amp;`\\r\\n    - [ \\\" ] : `&quot;`\\r\\n    - [ &lsquo; ] : `&lsquo;`\\r\\n    - [ &rsquo; ] : `&rsquo;`\\r\\n    - [ &#96; ] : `&#96;`\\r\\n    - [ · ] : `&middot;`\\r\\n\\r\\n- 유니코드 참고 : https://symbl.cc/kr/unicode-table/{:target=\\\"_blank\\\"}\\r\\n\\r\\n## 4. 웹 접근성 준수\\r\\n\\r\\nHTML5 작업시 최대한 웹 접근성을 준수하여 작업합니다.\\r\\n만약 프로젝트 요건에 웹 접근성 마크 획득인 경우, WAI-ARIA 까지 고려하여 디테일하게 작업을 해야 합니다.\\r\\n\\r\\n\\r\\n### 기본적인 웹 접근성 준수사항\\r\\n- 모든 인터랙티브 요소 ( ex: `<button>`, `<a>` 등 ) 에 대한 키보드 접근성 보장해야 합니다.\\r\\n-  `<img/>` 이미지 태그는 적절한 `alt` 속성을 포함하여 접근성을 높입니다.\\r\\n- 시각적인 요소에 대한 대체 텍스트가 제공되어야 합니다.\\r\\n- HTML5 표준 명세서 원칙에 따라 인라인요소(line) 내 블럭요소(block) 삽입을 지양합니다.\\r\\n    - 예외사항 : `<a>` 태그 내 블럭요소는 가능합니다.\\r\\n\\r\\n\\r\\n- **참고 사이트**\\r\\n    - HTML5 요소 참고서 : https://developer.mozilla.org/ko/docs/Web/HTML/Element{:target=\\\"_blank\\\"}\\r\\n    - 접근성 지침 예시 1 : https://nuli.navercorp.com/guideline/s01/g01{:target=\\\"_blank\\\"}\\r\\n    - 접근성 지침 예시 2 : http://www.websoul.co.kr/consulting/guide1_01.asp{:target=\\\"_blank\\\"}\\r\\n    - 주요 UI별 ARIA 적용 사례 : https://aoa.gitbook.io/skymimo/aoa-2022-2023/ui-aria-2022{:target=\\\"_blank\\\"} &nbsp;\\r\\n\\r\\n\\r\\n> 웹접근성 및 WAI-ARIA 관련 자세한 내용은 [ 작업가이드 ] 메뉴 참고 바랍니다.\\r\\n{:class=\\\"prompt-info\\\"}\\r\\n\\r\\n---\\r\\n\\r\\n프로젝트를 수행할 때 위의 내용을 참고해 주시기 바랍니다.\";","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 posts\">\r\n                    <div class=\"lottie-banner\">\r\n                        <LottieLoader :lottieData=\"lottieJson\"/>\r\n                    </div>\r\n                    <PageMarkDown :loader=\"postMd\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport PageMarkDown from '@/components/PageMarkDown.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieRul.json'\r\nimport postMd from '@/posts/rul/기본규칙.md' \r\n\r\n\r\nconst title = ref('기본 규칙')\r\nconst pageClass = ref(['rul', 'RuleDefault'])\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./RuleDefault.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RuleDefault.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export default \"---\\r\\ntitle: 네임 규칙 안내\\r\\ndate: 2024.06\\r\\n---\\r\\n\\r\\n본 문서는 프로젝트를 수행하면서 준수해야 할 네임 규칙을 설명합니다. \\r\\n해당 내용을 참고하여 프로젝트 상황에 맞게 적용하면 됩니다.\\r\\n\\r\\n## 1. 코딩 스타일 표기법\\r\\n\\r\\nHTML, CSS, JS 작업할 시 따라야할 표기법은 다음과 같습니다.\\r\\n\\r\\n\\r\\n| 항목                | 표기 명칭              |  예시 | 설명                                                                                      |\\r\\n|---------------------|-----------------------|---|-------------------------------------------------------------------------------------------|\\r\\n| image | 스네이크 표기법 (snake_case) | ic_24_line_check.png  | 이미지는 단어 사이에 언더바(_)를 사용합니다. |\\r\\n| file | 케밥 표기법 (kebab-case) | _ui-button.scss <br> app.css  | 화면 페이지를 제외한 나머지는 단어 사이에 하이픈(-)을 사용합니다. |\\r\\n| class        | 케밥 표기법 (kebab-case) | .section-area <br> .ui-button | 모든 class명은 단어 사이에 하이픈(-)을 사용합니다.                  |\\r\\n| id           | 케밥 표기법 (kebab-case) | #radio-tab-01 | 불가피하게 id 써야되는 경우, 단어 사이에 하이픈(-)을 사용합니다.                                      |\\r\\n| js          | 카멜 표기법 (camelCase) <br> 파스칼 표기법(PascalCase) | let = maxNum <br> toUpperCase() <br> new Component() | 생성자 함수를 제외한 모든 명칭은 맨 앞 단어만 소문자로 사용합니다.                        |\\r\\n\\r\\n## 2. 규칙 상세 설명\\r\\n\\r\\n\\r\\n### 2-1. 파일명 정의\\r\\n\\r\\n\\r\\n* **image :** 요소, 크기, 형태 순으로 결합하여 사용합니다.\\r\\n    * 아이콘 : ic_24_line_check.png \\r\\n    * 이미지 : img_main_visual.png\\r\\n* **file :** 이미지를 제외한 파일명은 최대한 한 단어로 사용하며, 두 단어 이상일 경우 하이픈(-)을 사용합니다.\\r\\n    * 예시 : guide.html / ui-button.html\\r\\n* **css :** 파일명과 동일하게 표기하나, 최종적으로 임포트하는 파일 외에 css파일은 앞에 언더바(_)를 사용합니다.\\r\\n    * 예시 : app.scss / _ui-button.scss\\r\\n\\r\\n\\r\\n> 파일명 정의는 프로젝트 상황에 따라 다르게 적용해도 무관합니다.\\r\\n{:class=\\\"prompt-warning\\\"}\\r\\n\\r\\n<br>\\r\\n\\r\\n### 2-2. id 및 class 선택자\\r\\n\\r\\n<br> \\r\\n\\r\\n#### 선택자 정의\\r\\n\\r\\n* **id 선택자 :** id는 최대한 개발을 위해 사용 하지 않으며, 퍼블 작업시 불가피하게 id 연결이 필요하는 경우, 단어 사이에 하이픈(-)을 사용합니다.\\r\\n    * 예시 : radio-01\\r\\n* **class 선택자 :** class는 기능, 형태, 상태 등 요소에 대한 단어들을 결합하여 사용합니다.\\r\\n    * 기능 - 요소의 기능을 나타내는 단어. 예: `accordion`, `button`\\r\\n    * 형태 - 요소의 집합을 나타내는 단어. 예: `wrap` , `container`, `area`, `header`, `inner` , `box`\\r\\n    * 상태 - 요소의 상태를 나타내는 단어. 예: `is-active`, `is-on`, `is-disabled`\\r\\n        * 상태를 나타내는 접두어(is-)는 일관성을 위해 사용하거나, 사용하지 않는 것으로 규칙을 정해서 통일합니다.\\r\\n\\r\\n```html\\r\\n<div class=\\\"section-area\\\">\\r\\n    <div class=\\\"section-header\\\"></div>\\r\\n    <div class=\\\"section-body\\\"></div>\\r\\n    <div class=\\\"section-footer\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"acordion-area is-active\\\">\\r\\n    <div class=\\\"acordion-header\\\"></div>\\r\\n    <div class=\\\"acordion-body\\\">\\r\\n        <div class=\\\"content-inner\\\">\\r\\n            <div class=\\\"list-box\\\">\\r\\n                <ul class=\\\"lists\\\">\\r\\n                    <li class=\\\"item\\\"></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n```\\r\\n\\r\\n<br>\\r\\n\\r\\n### 2-3. class 축약어\\r\\n\\r\\n> class 명은 직관적으로 알아 볼 수 있도록 가능한 축약하지 않으나, 작업의 효율성을 위해 일부 축약하여 사용해도 무관합니다.\\r\\n{:class=\\\"prompt-warning\\\"}\\r\\n\\r\\n<br> \\r\\n\\r\\n#### 공통 축약어\\r\\n\\r\\n| 구분        | class |  축약   | 예시 |\\r\\n|-------------|--------|--------| ------- |\\r\\n| 버튼   |  button | btn | btn-primary, btn-cancel |\\r\\n| 숫자   |  number | num | text-num   |\\r\\n| 메세지   |  message | msg | msg-box |\\r\\n| 정보   |  information | info | data-info-area |\\r\\n| 네비게이션   |  navigation | nav | lnb-nav |\\r\\n| 컬럼   |  column | col | col-date, col-name | \\r\\n| 배경   |  background | bg | bg-primary | \\r\\n{:class=\\\"custom\\\"}\\r\\n\\r\\n<br>\\r\\n\\r\\n#### 사이즈 축약어\\r\\n\\r\\n| 구분        | class |  축약   | 예시 |\\r\\n|-------------|--------|--------| ------- |\\r\\n| 매우 작음   |  xxsmall | xxs | 크기 16   |\\r\\n| 더 작음   |  xsmall | xs | 크기 18  |\\r\\n| 작음   |  small | sm | 크기 20    |\\r\\n| 보통   |  medium | md | 크기 24  |\\r\\n| 큼   |  large | lg | 크기 32  |\\r\\n| 더 큼   |  xlarge | xl | 크기 36  |\\r\\n| 매우 큼   |  xxlarge | xxl | 크기 40  |\\r\\n{:class=\\\"custom\\\"}\\r\\n\\r\\n<br>\\r\\n\\r\\n### 2-4. js 명칭 정의\\r\\n\\r\\nJavaScript 코드에서 생성자 함수를 제외한 모든 명칭은 카멜기법(camelCase)으로 일관된 네이밍 규칙을 따릅니다. \\r\\n\\r\\n<br>\\r\\n\\r\\n#### 변수명 정의\\r\\n\\r\\n* 변수명은 해당 변수의 목적와 용도를 명확히 알 수 있도록 지어야 합니다.\\r\\n\\r\\n```js\\r\\n// 잘못된 예 (X)\\r\\nlet data = [15, 87, 33, 45]\\r\\n\\r\\n// 올바른 예 (O)\\r\\nlet scoreData = [15, 87, 33, 45]\\r\\n\\r\\n```\\r\\n\\r\\n<br>\\r\\n\\r\\n#### 함수명 정의\\r\\n\\r\\n* 함수명은 동사로 시작하며, 수행하는 동작을 명확히 나타내야 합니다.\\r\\n* 생성자 함수는 첫단어가 대문자로 시작하는 파스칼 표기법(PascalCase)로 작성해야 합니다.\\r\\n\\r\\n```js\\r\\n\\r\\n// 잘못된 예 (X)\\r\\nconst handle = () => {}\\r\\n\\r\\n// 올바른 예 (O)\\r\\nconst handleLogin = () => {}\\r\\n\\r\\n// 잘못된 생성자 (X) - arrow 함수는 생성자로 사용할 수 없습니다.\\r\\nconst user = (name) => { \\r\\n  this.name = '에러'\\r\\n}\\r\\nconst user1 = new user('에러') // TypeError : 생성자가 아님\\r\\n\\r\\n// 올바른 생성자 (O)\\r\\nfunction UserName(name) {\\r\\n  this.name = name\\r\\n}\\r\\nconst user2 = new UserName('삼도리')\\r\\nconsole.log(user2.name) // 삼도리\\r\\n\\r\\n// class 문법 생성자 ES6 (O)\\r\\nclass UserClass {\\r\\n  constructor(name) {\\r\\n    this.name = name;\\r\\n  }\\r\\n}\\r\\nconst user3 = new UserClass('SD')\\r\\nconsole.log(user3.name) // SD\\r\\n```\\r\\n\";","<template>\r\n    <div :class=\"['container', pageClass]\">\r\n        <div class=\"container-content\">\r\n            <PageTopSlot :title=\"title\" :pagePath=\"pageClass\" />\r\n\r\n            <div class=\"section-area row\">\r\n                <div class=\"inner-col col-1 posts\">\r\n                    <div class=\"lottie-banner\">\r\n                        <LottieLoader :lottieData=\"lottieJson\"/>\r\n                    </div>\r\n                    <PageMarkDown :loader=\"postMd\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, reactive } from 'vue'\r\nimport PageTopSlot from '@/components/PageTopSlot.vue'\r\nimport PageMarkDown from '@/components/PageMarkDown.vue'\r\nimport LottieLoader from '@/components/LottieLoader.vue'\r\nimport lottieJson from '@/assets/js/lottie/lottieRul.json'\r\nimport postMd from '@/posts/rul/네임규칙.md' \r\n\r\nconst title = ref('네임 규칙')\r\nconst pageClass = ref(['rul', 'RuleName'])\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./RuleName.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RuleName.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["title","ref","pageClass","__exports__"],"sourceRoot":""}